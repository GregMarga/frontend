[{"D:\\Διπλωματική\\project\\frontend\\src\\index.js":"1","D:\\Διπλωματική\\project\\frontend\\src\\App.js":"2","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js":"3","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointments.js":"4","D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js":"5","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js":"6","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js":"7","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js":"8","D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js":"9","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js":"10","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js":"11","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js":"12","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js":"13","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js":"14","D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js":"15","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js":"16","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History.js":"17","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js":"18","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js":"19","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js":"20","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js":"21","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js":"22","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js":"23","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js":"24","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js":"25","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js":"26","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js":"27","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js":"28","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js":"29","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js":"30","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js":"31","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js":"32","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js":"33","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js":"34","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js":"35","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js":"36","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js":"37","D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js":"38","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js":"39","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js":"40","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js":"41","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js":"42","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js":"43","D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js":"44","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js":"45","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js":"46","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js":"47","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js":"48","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\Files.js":"49","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesList.js":"50","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesListItem.js":"51","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js":"52","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FileEdit.js":"53"},{"size":260,"mtime":1651833409357,"results":"54","hashOfConfig":"55"},{"size":2747,"mtime":1655147130333,"results":"56","hashOfConfig":"55"},{"size":5056,"mtime":1655658135386,"results":"57","hashOfConfig":"55"},{"size":97,"mtime":1651833197568,"results":"58","hashOfConfig":"55"},{"size":1515,"mtime":1654605434854,"results":"59","hashOfConfig":"55"},{"size":3042,"mtime":1655663030675,"results":"60","hashOfConfig":"55"},{"size":1296,"mtime":1655639011165,"results":"61","hashOfConfig":"55"},{"size":1946,"mtime":1654511672529,"results":"62","hashOfConfig":"55"},{"size":3648,"mtime":1655814573738,"results":"63","hashOfConfig":"55"},{"size":222,"mtime":1652096209126,"results":"64","hashOfConfig":"55"},{"size":792,"mtime":1654802892489,"results":"65","hashOfConfig":"55"},{"size":122,"mtime":1652200578637,"results":"66","hashOfConfig":"55"},{"size":232,"mtime":1654429189609,"results":"67","hashOfConfig":"55"},{"size":2685,"mtime":1655488834751,"results":"68","hashOfConfig":"55"},{"size":4431,"mtime":1655489486094,"results":"69","hashOfConfig":"55"},{"size":11658,"mtime":1655484708788,"results":"70","hashOfConfig":"55"},{"size":5824,"mtime":1656171525595,"results":"71","hashOfConfig":"55"},{"size":526,"mtime":1652361098154,"results":"72","hashOfConfig":"55"},{"size":8414,"mtime":1656175783895,"results":"73","hashOfConfig":"55"},{"size":3636,"mtime":1655315244223,"results":"74","hashOfConfig":"55"},{"size":328,"mtime":1654877233072,"results":"75","hashOfConfig":"55"},{"size":3657,"mtime":1652696611494,"results":"76","hashOfConfig":"55"},{"size":7128,"mtime":1656172079932,"results":"77","hashOfConfig":"55"},{"size":2976,"mtime":1656171673556,"results":"78","hashOfConfig":"55"},{"size":995,"mtime":1654968392119,"results":"79","hashOfConfig":"55"},{"size":1294,"mtime":1655828825098,"results":"80","hashOfConfig":"55"},{"size":12117,"mtime":1656088450098,"results":"81","hashOfConfig":"55"},{"size":456,"mtime":1654886504748,"results":"82","hashOfConfig":"55"},{"size":4782,"mtime":1656175715746,"results":"83","hashOfConfig":"55"},{"size":3913,"mtime":1656174885874,"results":"84","hashOfConfig":"55"},{"size":811,"mtime":1655914642418,"results":"85","hashOfConfig":"55"},{"size":831,"mtime":1655312561923,"results":"86","hashOfConfig":"55"},{"size":1369,"mtime":1656167920349,"results":"87","hashOfConfig":"55"},{"size":381,"mtime":1654444029469,"results":"88","hashOfConfig":"55"},{"size":323,"mtime":1654510683191,"results":"89","hashOfConfig":"55"},{"size":380,"mtime":1655133988330,"results":"90","hashOfConfig":"55"},{"size":594,"mtime":1655144935574,"results":"91","hashOfConfig":"55"},{"size":4158,"mtime":1655482931780,"results":"92","hashOfConfig":"55"},{"size":5049,"mtime":1655053609073,"results":"93","hashOfConfig":"55"},{"size":1940,"mtime":1654598731892,"results":"94","hashOfConfig":"55"},{"size":406,"mtime":1654528326660,"results":"95","hashOfConfig":"55"},{"size":1710,"mtime":1654529564944,"results":"96","hashOfConfig":"55"},{"size":1506,"mtime":1654598496357,"results":"97","hashOfConfig":"55"},{"size":185,"mtime":1655052061232,"results":"98","hashOfConfig":"55"},{"size":273,"mtime":1573657440000,"results":"99","hashOfConfig":"55"},{"size":607,"mtime":1655143814135,"results":"100","hashOfConfig":"55"},{"size":1495,"mtime":1655135095584,"results":"101","hashOfConfig":"55"},{"size":2151,"mtime":1656175756847,"results":"102","hashOfConfig":"55"},{"size":1739,"mtime":1656171701096,"results":"103","hashOfConfig":"55"},{"size":636,"mtime":1655913474145,"results":"104","hashOfConfig":"55"},{"size":1182,"mtime":1655914707709,"results":"105","hashOfConfig":"55"},{"size":1874,"mtime":1655744255335,"results":"106","hashOfConfig":"55"},{"size":3357,"mtime":1655915805719,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"qiatdq",{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"110"},"D:\\Διπλωματική\\project\\frontend\\src\\index.js",[],["222","223"],"D:\\Διπλωματική\\project\\frontend\\src\\App.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js",["224"],"import { Container } from 'react-bootstrap';\r\nimport PatientsList from '../components/PatientsList';\r\nimport PatientsListHeader from '../components/PatientsListHeader';\r\nimport Backdrop from '../components/UI/Backdrop';\r\nimport classes from './Patients.module.css';\r\nimport Modal from '../components/UI/Modal';\r\nimport DeleteModal from '../components/UI/DeleteModal';\r\nimport EditPatient from '../components/EditPatient';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useState, useEffect, useContext, useReducer } from 'react';\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'name':\r\n            return { ...state, name: action.payload.name };\r\n        case 'sirname':\r\n            return { ...state, sirname: action.payload.sirname };\r\n        case 'fathersName':\r\n            return { ...state, fathersName: action.payload.fathersName };\r\n        case 'tel':\r\n            return { ...state, tel: action.payload.tel };\r\n        case 'amka':\r\n            return { ...state, amka: action.payload.amka };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nconst Patients = () => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n    const [loadedPatients, setLoadedPatients] = useState([]);\r\n    const [patientToDelete, setPatientToDelete] = useState();\r\n    const [patientToEdit, setPatientToEdit] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n\r\n    const defaultSearch={ sirname: '', name: '', fathersName: '', age: '', tel: '', amka: '' };\r\n\r\n    const [state, dispatch] = useReducer(reducer,defaultSearch);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `http://localhost:5000/patients/getPatients/${auth.userId}?name=${state.name}&sirname=${state.sirname}&fathersName=${state.fathersName}&tel=${state.tel}&amka=${state.amka}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatients(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        setTimeout(fetchPatients);\r\n    }, [sendRequest, state]);\r\n\r\n\r\n    function addPatientHandler() {\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n    function closeHandler() {\r\n        setModalIsOpen(false);\r\n    }\r\n    function deleteHandler(patientId) {\r\n        setDeleteModalIsOpen(true);\r\n        setPatientToDelete(patientId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function editHandler(patientId) {\r\n        setEditModalIsOpen(true);\r\n        setPatientToEdit(patientId);\r\n    }\r\n    function closeEditModal() {\r\n        setEditModalIsOpen(false);\r\n    }\r\n    function submitPatientHandler(patient) {\r\n        setLoadedPatients(prevPatients => {\r\n            return [patient, ...prevPatients];\r\n        });\r\n    }\r\n    async function deletePatientHandler() {\r\n        const responseDeletedPatient = await sendRequest(`http://localhost:5000/patients/${patientToDelete}`, 'DELETE', null, {\r\n            Authorization: 'Bearer ' + auth.token\r\n        }\r\n        );\r\n        setLoadedPatients(prevPatients => {\r\n            return prevPatients.filter(patient => patient._id !== responseDeletedPatient._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    return (\r\n        <div className={classes.test}>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            <Container>\r\n                <PatientsListHeader  dispatch={dispatch}/>\r\n                {isLoading && <LoadingSpinner />}\r\n\r\n                {!isLoading && loadedPatients && <PatientsList patients={loadedPatients} onDelete={deleteHandler} onEdit={editHandler} />}\r\n                <button onClick={addPatientHandler} className={classes.addButton}>Add Patient +</button>\r\n                {modalIsOpen && <Modal onClose={closeHandler} onSubmit={submitPatientHandler} patients={loadedPatients} />}\r\n                {modalIsOpen && !error && <Backdrop onClick={closeHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deletePatientHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this patient?Please note that it can't be undone once thereafter.\" />}\r\n                {deleteModalIsOpen && !error && <Backdrop onClick={closeDeleteModal} />}\r\n                {editModalIsOpen && !error && <Backdrop onClick={closeEditModal} />}\r\n                {editModalIsOpen && <EditPatient onClose={closeEditModal} patientId={patientToEdit} />}\r\n\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patients;","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointments.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js",["225"],"import { Fragment } from 'react';\r\nimport { useParams, Switch, Route } from 'react-router-dom'\r\nimport Header from '../components/Header';\r\nimport Basic from '../components/Patient-Details-Pages/Basic';\r\nimport ClinicalExamination from '../components/Patient-Details-Pages/ClinicalExamination';\r\nimport History from '../components/Patient-Details-Pages/History';\r\nimport LabAnalysis from '../components/Patient-Details-Pages/LabAnalysis/LabAnalysis';\r\nimport Visits from '../components/Patient-Details-Pages/Visits/Visits';\r\nimport PatientId from '../components/PatientId';\r\nimport classes from './PatientDetail.module.css';\r\nimport VisitDetail from '../components/Patient-Details-Pages/Visits/VisitDetail';\r\nimport FileEdit from '../components/Patient-Details-Pages/files/FileEdit';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport NewLabAnalysis from '../components/Patient-Details-Pages/LabAnalysis/NewLabAnalysis';\r\nimport Files from '../components/Patient-Details-Pages/files/Files';\r\nimport { useState, useEffect, useContext } from 'react';\r\n\r\n\r\n\r\nconst PatientDetail = () => {\r\n    const [loadedPatient, setLoadedPatient] = useState({ name: '', sirname: '', age: '', amka: '', fathersName: '', tel: '' });\r\n    const params = useParams();\r\n    const patientId = params.patientId;\r\n    const auth = useContext(AuthContext);\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatient(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Header patientId={params.patientId} />\r\n            <PatientId patient={loadedPatient} />\r\n            <h5 className={classes.mytitle}>Τα πεδία με <span>* </span>είναι απαραίτητα</h5>\r\n\r\n            <Switch>\r\n                <Route path={`/patients/${params.patientId}/basic`} exact><Basic patient={loadedPatient} patientId={patientId} /></Route>\r\n                <Route path={`/patients/${params.patientId}/anamnistiko`}><History patientId={patientId} /></Route>\r\n                <Route path={`/patients/${params.patientId}/visits`} exact><div><Visits patientId={patientId} /></div></Route>\r\n                <Route path={`/patients/${params.patientId}/clinical`}><ClinicalExamination /></Route>\r\n                <Route path={`/patients/${params.patientId}/lab_test`} exact><LabAnalysis patientId={patientId} /></Route>\r\n                <Route path={`/patients/${params.patientId}/aad`} exact><Files patientId={patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/aad/:fileId`} ><FileEdit  patientId={patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/lab_test/:type/:labId`}><NewLabAnalysis patientId={params.patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/lab_test/:labId`}><NewLabAnalysis patientId={params.patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/visits/:visitId`}><VisitDetail patientId={params.patientId} /></Route>\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PatientDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js",["226","227","228","229","230"],"import { Fragment } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './Basic.module.css';\r\nimport SaveButton from '../UI/SaveButton';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Basic = (props) => {\r\n    const [loading,SetLoading]=useState(false);\r\n    const [loadedBasics, setLoadedBasics] = useState({ dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '' })\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const history=useHistory();\r\n\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const AgeInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n\r\n    const dateOfBirthInputRef = useRef();\r\n    const placeOfBirthInputRef = useRef();\r\n    const jobInputRef = useRef();\r\n    const familyStatusInputRef = useRef();\r\n    const genderInputRef = useRef();\r\n    const addressInputRef = useRef();\r\n    const areaInputRef = useRef();\r\n    const postalCodeRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/basic`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedBasics({ placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode });\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        SetLoading(true);\r\n        try {\r\n            await fetch(`http://localhost:5000/patients/${props.patientId}`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    name: nameInputRef.current.value,\r\n                    sirname: sirnameInputRef.current.value,\r\n                    fathersName: fathersNameInputRef.current.value,\r\n                    age: AgeInputRef.current.value,\r\n                    amka: amkaInputRef.current.value,\r\n                    tel: TelInputRef.current.value\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            });\r\n\r\n        } catch (err) { throw new Error(err)}\r\n\r\n\r\n        try {\r\n            await fetch(`http://localhost:5000/patients/${props.patientId}/basic`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        placeOfBirth: placeOfBirthInputRef.current.value,\r\n                        job: jobInputRef.current.value,\r\n                        familyStatus: familyStatusInputRef.current.value,\r\n                        gender: genderInputRef.current.value,\r\n                        address: addressInputRef.current.value,\r\n                        area: areaInputRef.current.value,\r\n                        postalCode: postalCodeRef.current.value,\r\n\r\n                    }), headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: 'Bearer ' + auth.token\r\n                    }                    \r\n                });\r\n\r\n                SetLoading(false);\r\n\r\n        } catch (err) { throw new Error(err)}\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading||loading && <LoadingSpinner asOverlay />}\r\n\r\n            {!isLoading && <form className={classes.basicForm} onSubmit={submitHandler}>\r\n\r\n                <Container >\r\n\r\n                    <Row className='justify-content-center '>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"sirname\">Επώνυμο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={props.patient.sirname} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"name\">Όνομα<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={nameInputRef} id='name' type='text' required defaultValue={props.patient.name} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"fathers-name\">Πατρώνυμο</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={fathersNameInputRef} name='fathersName' id='fathers-name' type='text' defaultValue={props.patient.fathersName} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"age\">Έτος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={AgeInputRef} id='age' type='text' name=\"age\" defaultValue={props.patient.age} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"birth_place\" >Τόπος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={placeOfBirthInputRef} id='birth_place' type='text' name=\"placeOfBirth\" defaultValue={loadedBasics.placeOfBirth} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"amka\"  >ΑΜΚΑ</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={amkaInputRef} name='amka' id='amka' type='text' defaultValue={props.patient.amka} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"tel\" >Τηλέφωνο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={TelInputRef} name='tel' id='tel' type='text' defaultValue={props.patient.tel} required />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"job\">Επάγγελμα</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={jobInputRef} name='job' id='job' type='text' defaultValue={loadedBasics.job} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"family_status\">Οικογενειακή Κατάσταση</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <select ref={familyStatusInputRef} id='family_status' name='family_status'>\r\n                                <option value=\"none\" selected disabled hidden>Select an Option</option>\r\n                                <option value='married' selected={loadedBasics.familyStatus === 'married'} >Παντρεμμένος/η</option>\r\n                                <option value='notmarried' selected={loadedBasics.familyStatus === 'notmarried'}>Ανύπνατρος/η</option>\r\n                                <option value='divorced' selected={loadedBasics.familyStatus === 'divorced'}>Διαζευγμένος/η</option>\r\n                            </select>\r\n                            {/* <input id='family_status' type='text' /> */}\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"gender\">Φύλο</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <select ref={genderInputRef} name='gender' id='gender'  >\r\n                                <option value=\"none\" selected disabled hidden>Select an Option</option>\r\n                                <option value='male' selected={loadedBasics.gender === 'male'}>Άρρεν</option>\r\n                                <option value='female' selected={loadedBasics.gender === 'female'}>Θήλυ</option>\r\n                                <option value='other' selected={loadedBasics.gender === 'other'}>Άλλο</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"address\">Διεύθυνση</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={addressInputRef} id='address' type='text' name='address' defaultValue={loadedBasics.address} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"location\">Περιοχή</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={areaInputRef} id='location' name=\"area\" type='text' defaultValue={loadedBasics.area} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"postalcode\">Τ.Κ</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={postalCodeRef} id='postalcode' name='postalCode' type='text' defaultValue={loadedBasics.postalCode} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={emailInputRef} id='email' type='text' name=\"email\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row >\r\n                        <Col  ><SaveButton /></Col>\r\n                    </Row>\r\n\r\n\r\n\r\n                </Container>\r\n            </form>}\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Basic;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History.js",["231"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js",["232"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js",["233","234"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js",["235"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js",["236","237","238"],"import classes from './VisitDetail.module.css';\r\nimport Card from \"../../UI/Card\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport BMI from './BMI';\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport moment from 'moment';\r\nimport { useState, useRef, useContext, useEffect } from 'react';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport { Fragment } from 'react';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst VisitDetail = (props) => {\r\n    // const [loadVisit,setLoadVisit]=useState({date:'',diagnosis:'',geniki_eikona,piesi,sfiksis,weight,height,test_volume,others})\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const location = useLocation();\r\n    const path = (params.visitId !== 'new') ? location.pathname.split('/visits')[0] + '/lab_test' : location.pathname.split('/visits')[0] + '/lab_test/new';\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadVisit, setLoadVisit] = useState({ date: '', diagnosis: '', geniki_eikona: '', piesi: '', sfiksis: '', weight: '', height: '', test_volume: '', others: '', smkt: '', tekt: '' });\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const createVisitId = async () => {\r\n            const visitId = await sendRequest(`http://localhost:5000/patients/visits/createVisitId`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadVisit({ ...loadVisit, visitId: visitId })\r\n        }\r\n        createVisitId();\r\n    }, []);\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            console.log(responseData._id)\r\n            setLoadVisit({ diagnosis: responseData.diagnosis, date: moment(responseData.date).format('YYYY-MM-DD'), tekt: responseData.tekt, smkt: responseData.smkt, geniki_eikona: responseData.geniki_eikona, piesi: responseData.piesi, sfiksis: responseData.sfiksis, weight: responseData.weight, height: responseData.height, test_volume: responseData.test_volume, others: responseData.others, visitId: responseData._id });\r\n        } catch (err) { }\r\n        console.log(loadVisit.visitId)\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (params.visitId !== 'new') {\r\n            fetchVisit();\r\n        }\r\n    }, []);\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        if (params.visitId === 'new') {\r\n            console.log(loadVisit.visitId)\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'POST',\r\n                    JSON.stringify({\r\n                        id: loadVisit.visitId,\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                        uid: auth.userId\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n            <Container fluid className={classes.visitDetail}>\r\n                <Card className={classes.cardsVisitDetail}>\r\n                    <form onSubmit={submitHandler}>\r\n                        <Row className={` justify-content-md-start`}>\r\n                            <Col className={classes.label} lg='2'><h5>Στοιχεία Επίσκεψης</h5></Col>\r\n\r\n                            <Col className={classes.label} lg='2'><h5><Link to={`${path}?visitId=${loadVisit.visitId}`}>Εργαστηριακές</Link></h5></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Διάγνωση</label>\r\n                                <input ref={diagnosisInputRef} name='diagnosis' defaultValue={loadVisit.diagnosis} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Ημερομηνία*</label>\r\n                                <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={loadVisit.date} required />\r\n                                {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h4>Αντικειμενική Εξέταση</h4></Col></Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Γενική εικόνα</label>\r\n                                <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={classes.multiInputs}>\r\n                            <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                            <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                        </Row>\r\n                        <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                            <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                            <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                            <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                                <select ref={tektInputRef} name='tekt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                                <select ref={smktInputRef} name='smkt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                    <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                    <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                    <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                    <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n                        <Row >\r\n                            <Col sm='1' className='text-md-end'>\r\n                                <label htmlFor=\"others\">Άλλα</label>\r\n                            </Col>\r\n                            <Col sm='6'>\r\n                                <textarea ref={othersInputRef} id='others' defaultValue={loadVisit.others} name='others' rows='3' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col><SaveButton /></Col>\r\n                        </Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default VisitDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js",["239","240"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js",["241"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js",["242","243"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from './EditPatient.module.css';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport ErrorModal from './UI/ErrorModal';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\n\r\n\r\n\r\nconst EditPatient = (props) => {\r\n    const [loadedPatient, setLoadedPatient] = useState({ sirname: \"\", name: \"\", fathersName: \"\", age: \"\", tel: \"\", amka: \"\" });\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const AgeInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n    const history = useHistory();\r\n\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const data = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatient({ sirname: data.sirname, name: data.name, fathersName: data.fathersName, age: data.age, tel: data.tel, amka: data.amka })\r\n                console.log(data)\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n\r\n\r\n\r\n    // fetch(`http://localhost:5000/patients/${props.patientId}`\r\n    // ).then((response) => {\r\n    //     return response.json()\r\n    // })\r\n    //     .then((data) => {\r\n    //         setLoadedPatient({ sirname: data.sirname, name: data.name, fathersName: data.fathersName, age: data.age, tel: data.tel, amka: data.amka });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err.message);\r\n    //     });\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedPatient = {\r\n            sirname: sirnameInputRef.current.value,\r\n            name: nameInputRef.current.value,\r\n            fathersName: fathersNameInputRef.current.value,\r\n            age: AgeInputRef.current.value,\r\n            tel: TelInputRef.current.value,\r\n            amka: amkaInputRef.current.value\r\n        };\r\n        const response = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'PATCH', JSON.stringify(updatedPatient),\r\n            {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"my_modal\">\r\n            <div className={classes.form_style_5}>\r\n                <form onSubmit={submitHandler}>\r\n                    <fieldset>\r\n                        {!!error && <ErrorModal error={error} onClose={clearError} />}\r\n                        <legend>Patient Info</legend>\r\n                        <input ref={sirnameInputRef} type=\"text\" name=\"sirname\" placeholder=\"Επώνυμο *\" defaultValue={loadedPatient.sirname} required />\r\n                        <input ref={nameInputRef} type=\"text\" name=\"name\" placeholder=\"Όνομα *\" defaultValue={loadedPatient.name} required />\r\n                        <input ref={fathersNameInputRef} type=\"text\" name=\"fathersName\" placeholder=\"Πατρώνυμο \" defaultValue={loadedPatient.fathersName} />\r\n                        <input ref={AgeInputRef} type=\"text\" name=\"age\" placeholder=\"Ηλικία \" defaultValue={loadedPatient.age} />\r\n                        <input ref={TelInputRef} type=\"text\" name=\"tel\" placeholder=\"Τηλέφωνο *\" defaultValue={loadedPatient.tel} required />\r\n                        <input ref={amkaInputRef} type=\"text\" name=\"amka\" placeholder=\"ΑΜΚΑ \" defaultValue={loadedPatient.amka} />\r\n                        <button className=\"btn btn--alt\" type=\"button\" onClick={props.onClose}>Cancel</button>\r\n                        <button className=\"btn\" type='submit'>Edit </button>\r\n\r\n\r\n                    </fieldset>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPatient;","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js",["244","245"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\Files.js",["246","247"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesList.js",["248","249"],"import { Container, Row, Col } from 'react-bootstrap';\r\nimport FilesListItem from './FilesListItem';\r\nimport classes from './filesList.module.css';\r\n\r\n\r\nconst FilesList = (props) => {\r\n    console.log(props.files)\r\n    return (\r\n        <Container fluid className={classes.filesList}>\r\n            {props.files.map((file) => {\r\n                return <FilesListItem\r\n                    key={file}\r\n                    fileName={file}\r\n                />\r\n            })}\r\n            {/* <FilesListItem \r\n            fileName='thyro.jpg'\r\n            fileType='jpg'/> */}\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default FilesList;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FilesListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ImageUpload.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\files\\FileEdit.js",["250","251","252","253","254","255","256"],"import classes from './FileEdit.module.css';\r\nimport { Fragment } from \"react\";\r\nimport ImageUpload from \"../../UI/ImageUpload\";\r\nimport { useForm } from \"../../../hooks/form-hook\";\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context'\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"../../UI/Card\";\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport ErrorModal from \"../../UI/ErrorModal\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst FileEdit = (props) => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const params = useParams();\r\n    const [loadedFile, setLoadedFile] = useState({ pathname: '' })\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            image: {\r\n                image: undefined\r\n            }\r\n        },\r\n        true\r\n    );\r\n    // const fetchFile = async () => {\r\n    //     try {\r\n    //         const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files/${params.fileId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n    //         setLoadVisit({});\r\n    //     } catch (err) { }\r\n\r\n    // };\r\n    // useEffect(()=>{\r\n    //     if(params.fileId!=='new'){\r\n    //         fetchFile()\r\n    //     }\r\n\r\n    // },[])\r\n\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('image', formState.inputs.image.value);\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/files`, 'POST',\r\n                formData\r\n            )\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Container fluid className={classes.fileEdit}>\r\n                <Card className={classes.cardFiles}>\r\n                    <form onSubmit={submitHandler}>\r\n                        <Row>\r\n\r\n                            <Col className='text-center'>\r\n                                <label>Όνομα αρχείου</label>\r\n                                <input type='text' />\r\n                            </Col>\r\n                            <Col className='text-center'>\r\n                                <label>Ημερομηνία</label>\r\n                                <input type='date' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <ImageUpload center id='image' onInput={inputHandler} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <img src={`http://localhost:5000/uploads/images/${params.fileId}`} />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row><Col><SaveButton /></Col></Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default FileEdit;",{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":62,"column":8,"nodeType":"263","endLine":62,"endColumn":28,"suggestions":"264"},{"ruleId":"261","severity":1,"message":"265","line":41,"column":8,"nodeType":"263","endLine":41,"endColumn":21,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":21,"column":11,"nodeType":"269","messageId":"270","endLine":21,"endColumn":18},{"ruleId":"267","severity":1,"message":"271","line":30,"column":11,"nodeType":"269","messageId":"270","endLine":30,"endColumn":30},{"ruleId":"261","severity":1,"message":"272","line":49,"column":8,"nodeType":"263","endLine":49,"endColumn":21,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":105,"column":23,"nodeType":"276","messageId":"277","endLine":105,"endColumn":25},{"ruleId":"274","severity":1,"message":"275","line":105,"column":33,"nodeType":"276","messageId":"277","endLine":105,"endColumn":35},{"ruleId":"261","severity":1,"message":"278","line":33,"column":8,"nodeType":"263","endLine":33,"endColumn":10,"suggestions":"279"},{"ruleId":"261","severity":1,"message":"280","line":42,"column":8,"nodeType":"263","endLine":42,"endColumn":37,"suggestions":"281"},{"ruleId":"267","severity":1,"message":"282","line":22,"column":11,"nodeType":"269","messageId":"270","endLine":22,"endColumn":28},{"ruleId":"261","severity":1,"message":"280","line":42,"column":8,"nodeType":"263","endLine":42,"endColumn":37,"suggestions":"283"},{"ruleId":"261","severity":1,"message":"272","line":35,"column":8,"nodeType":"263","endLine":35,"endColumn":21,"suggestions":"284"},{"ruleId":"267","severity":1,"message":"285","line":10,"column":21,"nodeType":"269","messageId":"270","endLine":10,"endColumn":31},{"ruleId":"261","severity":1,"message":"286","line":51,"column":8,"nodeType":"263","endLine":51,"endColumn":10,"suggestions":"287"},{"ruleId":"261","severity":1,"message":"288","line":67,"column":8,"nodeType":"263","endLine":67,"endColumn":10,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":23,"column":5,"nodeType":"292","messageId":"293","endLine":39,"endColumn":6},{"ruleId":"290","severity":1,"message":"291","line":74,"column":9,"nodeType":"292","messageId":"293","endLine":91,"endColumn":10},{"ruleId":"261","severity":1,"message":"272","line":42,"column":8,"nodeType":"263","endLine":42,"endColumn":28,"suggestions":"294"},{"ruleId":"261","severity":1,"message":"272","line":37,"column":8,"nodeType":"263","endLine":37,"endColumn":21,"suggestions":"295"},{"ruleId":"267","severity":1,"message":"296","line":62,"column":15,"nodeType":"269","messageId":"270","endLine":62,"endColumn":23},{"ruleId":"267","severity":1,"message":"297","line":21,"column":11,"nodeType":"269","messageId":"270","endLine":21,"endColumn":16},{"ruleId":"261","severity":1,"message":"272","line":34,"column":8,"nodeType":"263","endLine":34,"endColumn":21,"suggestions":"298"},{"ruleId":"267","severity":1,"message":"299","line":18,"column":31,"nodeType":"269","messageId":"270","endLine":18,"endColumn":41},{"ruleId":"261","severity":1,"message":"278","line":31,"column":8,"nodeType":"263","endLine":31,"endColumn":10,"suggestions":"300"},{"ruleId":"267","severity":1,"message":"301","line":1,"column":21,"nodeType":"269","messageId":"270","endLine":1,"endColumn":24},{"ruleId":"267","severity":1,"message":"302","line":1,"column":26,"nodeType":"269","messageId":"270","endLine":1,"endColumn":29},{"ruleId":"267","severity":1,"message":"303","line":7,"column":20,"nodeType":"269","messageId":"270","endLine":7,"endColumn":29},{"ruleId":"267","severity":1,"message":"304","line":17,"column":11,"nodeType":"269","messageId":"270","endLine":17,"endColumn":15},{"ruleId":"267","severity":1,"message":"305","line":19,"column":12,"nodeType":"269","messageId":"270","endLine":19,"endColumn":22},{"ruleId":"267","severity":1,"message":"306","line":19,"column":24,"nodeType":"269","messageId":"270","endLine":19,"endColumn":37},{"ruleId":"267","severity":1,"message":"307","line":21,"column":37,"nodeType":"269","messageId":"270","endLine":21,"endColumn":48},{"ruleId":"267","severity":1,"message":"308","line":49,"column":19,"nodeType":"269","messageId":"270","endLine":49,"endColumn":31},{"ruleId":"309","severity":1,"message":"310","line":82,"column":33,"nodeType":"311","endLine":82,"endColumn":102},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.token' and 'auth.userId'. Either include them or remove the dependency array.","ArrayExpression",["314"],"React Hook useEffect has missing dependencies: 'auth.token' and 'patientId'. Either include them or remove the dependency array.",["315"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'dateOfBirthInputRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.token' and 'props.patientId'. Either include them or remove the dependency array.",["316"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'auth.token', 'props.patientId', and 'sendRequest'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'fetchVisit', 'params.labId', and 'params.type'. Either include them or remove the dependency array.",["318"],"'visitDateInputRef' is assigned a value but never used.",["319"],["320"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.token', 'loadVisit', and 'sendRequest'. Either include them or remove the dependency array. You can also do a functional update 'setLoadVisit(l => ...)' if you only need 'loadVisit' in the 'setLoadVisit' call.",["321"],"React Hook useEffect has missing dependencies: 'fetchVisit' and 'params.visitId'. Either include them or remove the dependency array.",["322"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["323"],["324"],"'response' is assigned a value but never used.","'query' is assigned a value but never used.",["325"],"'clearError' is assigned a value but never used.",["326"],"'Row' is defined but never used.","'Col' is defined but never used.","'useEffect' is defined but never used.","'auth' is assigned a value but never used.","'loadedFile' is assigned a value but never used.","'setLoadedFile' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'responseData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"331","fix":"333"},{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},{"desc":"331","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"331","fix":"344"},{"desc":"331","fix":"345"},{"desc":"331","fix":"346"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest, state]",{"range":"347","text":"348"},"Update the dependencies array to be: [auth.token, patientId, sendRequest]",{"range":"349","text":"350"},"Update the dependencies array to be: [auth.token, props.patientId, sendRequest]",{"range":"351","text":"352"},{"range":"353","text":"352"},"Update the dependencies array to be: [props.patientId, auth.token, params.labId, params.type, fetchVisit]",{"range":"354","text":"355"},{"range":"356","text":"355"},{"range":"357","text":"352"},"Update the dependencies array to be: [auth.token, loadVisit, sendRequest]",{"range":"358","text":"359"},"Update the dependencies array to be: [fetchVisit, params.visitId]",{"range":"360","text":"361"},"Update the dependencies array to be: [sendRequest, query, props.patientId, auth.token]",{"range":"362","text":"363"},{"range":"364","text":"352"},{"range":"365","text":"352"},{"range":"366","text":"352"},[2563,2583],"[auth.token, auth.userId, sendRequest, state]",[1935,1948],"[auth.token, patientId, sendRequest]",[2080,2093],"[auth.token, props.patientId, sendRequest]",[1530,1532],[2154,2183],"[props.patientId, auth.token, params.labId, params.type, fetchVisit]",[1967,1996],[1357,1370],[2265,2267],"[auth.token, loadVisit, sendRequest]",[3168,3170],"[fetchVisit, params.visitId]",[1663,1683],"[sendRequest, query, props.patientId, auth.token]",[1411,1424],[1209,1222],[1148,1150]]