[{"D:\\Διπλωματική\\project\\frontend\\src\\index.js":"1","D:\\Διπλωματική\\project\\frontend\\src\\App.js":"2","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js":"3","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointments.js":"4","D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js":"5","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js":"6","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js":"7","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js":"8","D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js":"9","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js":"10","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js":"11","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js":"12","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js":"13","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js":"14","D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js":"15","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js":"16","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History.js":"17","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js":"18","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js":"19","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js":"20","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js":"21","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js":"22","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js":"23","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js":"24","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js":"25","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js":"26","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js":"27","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js":"28","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js":"29","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js":"30","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js":"31","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js":"32","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js":"33","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js":"34","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js":"35","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js":"36","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js":"37","D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js":"38","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js":"39","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js":"40","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js":"41","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js":"42","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js":"43","D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js":"44","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js":"45","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js":"46","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js":"47","D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js":"48","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js":"49"},{"size":260,"mtime":1651833409357,"results":"50","hashOfConfig":"51"},{"size":2747,"mtime":1655147130333,"results":"52","hashOfConfig":"51"},{"size":4172,"mtime":1655488712846,"results":"53","hashOfConfig":"51"},{"size":97,"mtime":1651833197568,"results":"54","hashOfConfig":"51"},{"size":1515,"mtime":1654605434854,"results":"55","hashOfConfig":"51"},{"size":1810,"mtime":1653408200043,"results":"56","hashOfConfig":"51"},{"size":1298,"mtime":1655482369229,"results":"57","hashOfConfig":"51"},{"size":1946,"mtime":1654511672529,"results":"58","hashOfConfig":"51"},{"size":3418,"mtime":1655317822037,"results":"59","hashOfConfig":"51"},{"size":222,"mtime":1652096209126,"results":"60","hashOfConfig":"51"},{"size":792,"mtime":1654802892489,"results":"61","hashOfConfig":"51"},{"size":122,"mtime":1652200578637,"results":"62","hashOfConfig":"51"},{"size":232,"mtime":1654429189609,"results":"63","hashOfConfig":"51"},{"size":2685,"mtime":1655488834751,"results":"64","hashOfConfig":"51"},{"size":4431,"mtime":1655489486094,"results":"65","hashOfConfig":"51"},{"size":11658,"mtime":1655484708788,"results":"66","hashOfConfig":"51"},{"size":5833,"mtime":1655132296461,"results":"67","hashOfConfig":"51"},{"size":526,"mtime":1652361098154,"results":"68","hashOfConfig":"51"},{"size":8204,"mtime":1655488538962,"results":"69","hashOfConfig":"51"},{"size":3636,"mtime":1655315244223,"results":"70","hashOfConfig":"51"},{"size":328,"mtime":1654877233072,"results":"71","hashOfConfig":"51"},{"size":3657,"mtime":1652696611494,"results":"72","hashOfConfig":"51"},{"size":7138,"mtime":1655488024724,"results":"73","hashOfConfig":"51"},{"size":2967,"mtime":1655288935299,"results":"74","hashOfConfig":"51"},{"size":995,"mtime":1654968392119,"results":"75","hashOfConfig":"51"},{"size":1241,"mtime":1655484900071,"results":"76","hashOfConfig":"51"},{"size":11371,"mtime":1655316225040,"results":"77","hashOfConfig":"51"},{"size":456,"mtime":1654886504748,"results":"78","hashOfConfig":"51"},{"size":4541,"mtime":1655490201245,"results":"79","hashOfConfig":"51"},{"size":3677,"mtime":1655482379634,"results":"80","hashOfConfig":"51"},{"size":782,"mtime":1653558423777,"results":"81","hashOfConfig":"51"},{"size":831,"mtime":1655312561923,"results":"82","hashOfConfig":"51"},{"size":1369,"mtime":1655484924560,"results":"83","hashOfConfig":"51"},{"size":381,"mtime":1654444029469,"results":"84","hashOfConfig":"51"},{"size":323,"mtime":1654510683191,"results":"85","hashOfConfig":"51"},{"size":380,"mtime":1655133988330,"results":"86","hashOfConfig":"51"},{"size":594,"mtime":1655144935574,"results":"87","hashOfConfig":"51"},{"size":4158,"mtime":1655482931780,"results":"88","hashOfConfig":"51"},{"size":5049,"mtime":1655053609073,"results":"89","hashOfConfig":"51"},{"size":1940,"mtime":1654598731892,"results":"90","hashOfConfig":"51"},{"size":406,"mtime":1654528326660,"results":"91","hashOfConfig":"51"},{"size":1710,"mtime":1654529564944,"results":"92","hashOfConfig":"51"},{"size":1506,"mtime":1654598496357,"results":"93","hashOfConfig":"51"},{"size":185,"mtime":1655052061232,"results":"94","hashOfConfig":"51"},{"size":273,"mtime":1573657440000,"results":"95","hashOfConfig":"51"},{"size":607,"mtime":1655143814135,"results":"96","hashOfConfig":"51"},{"size":1495,"mtime":1655135095584,"results":"97","hashOfConfig":"51"},{"size":209,"mtime":1654688399835,"results":"98","hashOfConfig":"51"},{"size":1756,"mtime":1655490199323,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"qiatdq",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Διπλωματική\\project\\frontend\\src\\index.js",[],["206","207"],"D:\\Διπλωματική\\project\\frontend\\src\\App.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js",["208"],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointments.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js",["209"],"import { Fragment } from 'react';\r\nimport { useParams, Switch, Route } from 'react-router-dom'\r\nimport Header from '../components/Header';\r\nimport Basic from '../components/Patient-Details-Pages/Basic';\r\nimport ClinicalExamination from '../components/Patient-Details-Pages/ClinicalExamination';\r\nimport History from '../components/Patient-Details-Pages/History';\r\nimport LabAnalysis from '../components/Patient-Details-Pages/LabAnalysis/LabAnalysis';\r\nimport Visits from '../components/Patient-Details-Pages/Visits/Visits';\r\nimport PatientId from '../components/PatientId';\r\nimport classes from './PatientDetail.module.css';\r\nimport VisitDetail from '../components/Patient-Details-Pages/Visits/VisitDetail';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport NewLabAnalysis from '../components/Patient-Details-Pages/LabAnalysis/NewLabAnalysis';\r\nimport { useState, useEffect, useContext } from 'react';\r\n\r\n\r\n\r\nconst PatientDetail = () => {\r\n    const [loadedPatient, setLoadedPatient] = useState({ name: '', sirname: '', age: '', amka: '', fathersName: '', tel: '' });\r\n    const params = useParams();\r\n    const patientId = params.patientId;\r\n    const auth = useContext(AuthContext);\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${patientId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatient(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Header patientId={params.patientId} />\r\n            <PatientId patient={loadedPatient} />\r\n            <h5 className={classes.mytitle}>Τα πεδία με <span>* </span>είναι απαραίτητα</h5>\r\n\r\n            <Switch>\r\n                <Route path={`/patients/${params.patientId}/basic`} exact><Basic patient={loadedPatient} patientId={patientId} /></Route>\r\n                <Route path={`/patients/${params.patientId}/anamnistiko`}><History patientId={patientId} /></Route>\r\n                <Route path={`/patients/${params.patientId}/visits`} exact><div><Visits patientId={patientId} /></div></Route>\r\n                <Route path={`/patients/${params.patientId}/clinical`}><ClinicalExamination /></Route>\r\n                <Route path={`/patients/${params.patientId}/lab_test`} exact><LabAnalysis patientId={patientId} /></Route>\r\n                {/* <Route path={`/patients/62a0e2f4086903904ac8683e/visits/new`}><p>Please Work motherfuckerrrrrrrrrrrrrrrrrrrrr</p></Route> */}\r\n                <Route path={`/patients/${params.patientId}/lab_test/:type/:labId`}><NewLabAnalysis patientId={params.patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/lab_test/:labId`}><NewLabAnalysis patientId={params.patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/visits/:visitId`}><VisitDetail patientId={params.patientId} /></Route>\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PatientDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js",["210","211","212","213","214"],"import { Fragment } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './Basic.module.css';\r\nimport SaveButton from '../UI/SaveButton';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Basic = (props) => {\r\n    const [loading,SetLoading]=useState(false);\r\n    const [loadedBasics, setLoadedBasics] = useState({ dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '' })\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    const history=useHistory();\r\n\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const AgeInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n\r\n    const dateOfBirthInputRef = useRef();\r\n    const placeOfBirthInputRef = useRef();\r\n    const jobInputRef = useRef();\r\n    const familyStatusInputRef = useRef();\r\n    const genderInputRef = useRef();\r\n    const addressInputRef = useRef();\r\n    const areaInputRef = useRef();\r\n    const postalCodeRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/basic`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedBasics({ placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode });\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        SetLoading(true);\r\n        try {\r\n            await fetch(`http://localhost:5000/patients/${props.patientId}`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({\r\n                    name: nameInputRef.current.value,\r\n                    sirname: sirnameInputRef.current.value,\r\n                    fathersName: fathersNameInputRef.current.value,\r\n                    age: AgeInputRef.current.value,\r\n                    amka: amkaInputRef.current.value,\r\n                    tel: TelInputRef.current.value\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            });\r\n\r\n        } catch (err) { throw new Error(err)}\r\n\r\n\r\n        try {\r\n            await fetch(`http://localhost:5000/patients/${props.patientId}/basic`,\r\n                {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        placeOfBirth: placeOfBirthInputRef.current.value,\r\n                        job: jobInputRef.current.value,\r\n                        familyStatus: familyStatusInputRef.current.value,\r\n                        gender: genderInputRef.current.value,\r\n                        address: addressInputRef.current.value,\r\n                        area: areaInputRef.current.value,\r\n                        postalCode: postalCodeRef.current.value,\r\n\r\n                    }), headers: {\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: 'Bearer ' + auth.token\r\n                    }                    \r\n                });\r\n\r\n                SetLoading(false);\r\n\r\n        } catch (err) { throw new Error(err)}\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading||loading && <LoadingSpinner asOverlay />}\r\n\r\n            {!isLoading && <form className={classes.basicForm} onSubmit={submitHandler}>\r\n\r\n                <Container >\r\n\r\n                    <Row className='justify-content-center '>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"sirname\">Επώνυμο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={props.patient.sirname} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"name\">Όνομα<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={nameInputRef} id='name' type='text' required defaultValue={props.patient.name} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"fathers-name\">Πατρώνυμο</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={fathersNameInputRef} name='fathersName' id='fathers-name' type='text' defaultValue={props.patient.fathersName} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"age\">Έτος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={AgeInputRef} id='age' type='text' name=\"age\" defaultValue={props.patient.age} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"birth_place\" >Τόπος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={placeOfBirthInputRef} id='birth_place' type='text' name=\"placeOfBirth\" defaultValue={loadedBasics.placeOfBirth} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"amka\"  >ΑΜΚΑ</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={amkaInputRef} name='amka' id='amka' type='text' defaultValue={props.patient.amka} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"tel\" >Τηλέφωνο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={TelInputRef} name='tel' id='tel' type='text' defaultValue={props.patient.tel} required />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"job\">Επάγγελμα</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={jobInputRef} name='job' id='job' type='text' defaultValue={loadedBasics.job} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"family_status\">Οικογενειακή Κατάσταση</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <select ref={familyStatusInputRef} id='family_status' name='family_status'>\r\n                                <option value=\"none\" selected disabled hidden>Select an Option</option>\r\n                                <option value='married' selected={loadedBasics.familyStatus === 'married'} >Παντρεμμένος/η</option>\r\n                                <option value='notmarried' selected={loadedBasics.familyStatus === 'notmarried'}>Ανύπνατρος/η</option>\r\n                                <option value='divorced' selected={loadedBasics.familyStatus === 'divorced'}>Διαζευγμένος/η</option>\r\n                            </select>\r\n                            {/* <input id='family_status' type='text' /> */}\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"gender\">Φύλο</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <select ref={genderInputRef} name='gender' id='gender'  >\r\n                                <option value=\"none\" selected disabled hidden>Select an Option</option>\r\n                                <option value='male' selected={loadedBasics.gender === 'male'}>Άρρεν</option>\r\n                                <option value='female' selected={loadedBasics.gender === 'female'}>Θήλυ</option>\r\n                                <option value='other' selected={loadedBasics.gender === 'other'}>Άλλο</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"address\">Διεύθυνση</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={addressInputRef} id='address' type='text' name='address' defaultValue={loadedBasics.address} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"location\">Περιοχή</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={areaInputRef} id='location' name=\"area\" type='text' defaultValue={loadedBasics.area} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"postalcode\">Τ.Κ</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={postalCodeRef} id='postalcode' name='postalCode' type='text' defaultValue={loadedBasics.postalCode} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={emailInputRef} id='email' type='text' name=\"email\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row >\r\n                        <Col  ><SaveButton /></Col>\r\n                    </Row>\r\n\r\n\r\n\r\n                </Container>\r\n            </form>}\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Basic;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History.js",["215"],"import { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './History.module.css';\r\nimport SaveButton from '../UI/SaveButton'\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { useState,useEffect,useRef,useContext, Fragment } from \"react\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst History = (props) => {\r\n    const {isLoading,sendRequest,error,clearError}=useHttpClient();\r\n\r\n    const auth=useContext(AuthContext);\r\n\r\n    const [loadAnamnistiko,setLoadAnamnistiko]=useState({allergies:'',cleronomical:'',personal:'',surgeries:'',drug_usage:'',others:''})\r\n    const allergiesInputRef=useRef();\r\n    const cleronomicalInputRef=useRef();\r\n    const personalInputRef=useRef();\r\n    const surgeriesInputRef=useRef();\r\n    const drug_usageInputRef=useRef();\r\n    const othersInputRef=useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/anamnistiko`,'GET',null,{Authorization:'Bearer '+auth.token});\r\n                setLoadAnamnistiko({allergies:responseData.allergies,cleronomical:responseData.cleronomical,personal:responseData.personal,drug_usage:responseData.drug_usage,surgeries:responseData.surgeries,others:responseData.others});\r\n            }catch(err){ }\r\n            \r\n        };\r\n        fetchHistory();\r\n    }, []);\r\n\r\n    const submitHandler=async(event)=>{\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(`http://localhost:5000/patients/${props.patientId}/anamnistiko`, 'POST',\r\n                JSON.stringify({\r\n                    allergies:allergiesInputRef.current.value,\r\n                    cleronomical:cleronomicalInputRef.current.value,\r\n                    personal:personalInputRef.current.value,\r\n                    surgeries:surgeriesInputRef.current.value,\r\n                    drug_usage:drug_usageInputRef.current.value,\r\n                    others:othersInputRef.current.value\r\n                    \r\n\r\n                }), {\r\n                'Content-Type': 'application/json',\r\n                Authorization:'Bearer '+auth.token\r\n            });\r\n        } catch (err) {}\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n             {isLoading&&<LoadingSpinner asOverlay/>}\r\n             {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n       \r\n        <form className={classes.history} onSubmit={submitHandler}>\r\n            <Container >\r\n                <Row className='justify-content-center '>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"allergies\">Αλλεργίες</label>\r\n                    </Col>\r\n                    <Col className='text-sm-start'>\r\n                        <textarea ref={allergiesInputRef} id='allergies' rows='3' defaultValue={loadAnamnistiko.allergies}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"klironomiko\" >Κληρονομικό</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={cleronomicalInputRef} id='klironomiko' rows='3' defaultValue={loadAnamnistiko.cleronomical}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"fathers-name\">Ατομικό</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={personalInputRef} id='fathers-name' rows='3' defaultValue={loadAnamnistiko.personal}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"surgeries\">Εγχειρήσεις-Τοκετοί</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={surgeriesInputRef} id='surgeries' rows='3' defaultValue={loadAnamnistiko.surgeries}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"drugs_use\">Χρόνια Χρήση Φαρμάκων</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={drug_usageInputRef} name='drug_usage' id='drugs_use' rows='3' defaultValue={loadAnamnistiko.drug_usage}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor='smoking-alcohol'>Κάπνισμα-Άλκοολ</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea id='smoking-alcohol'name='smoking_alcohol' rows='3' defaultValue={''}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"others\">Άλλα</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={othersInputRef} name='others' id='others' rows='4' defaultValue={loadAnamnistiko.others}/>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row >\r\n                        <Col  ><SaveButton/></Col>\r\n                    </Row>\r\n\r\n            </Container>\r\n        </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default History;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js",["216","217"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js",["218","219"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js",["220"],"import ListsHeader from \"../../ListsHeader\";\r\nimport classes from './Visits.module.css';\r\nimport { Container } from \"react-bootstrap\";\r\nimport VisitsList from \"./VisitsList\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport DeleteModal from \"../../UI/DeleteModal\";\r\nimport Backdrop from \"../../UI/Backdrop\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst Visits = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadedVisits, setLoadedVisits] = useState([]);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [visitToDelete, setVisitToDelete] = useState();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedVisits(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchHistory();\r\n    }, [sendRequest]);\r\n\r\n    function deleteHandler(visitId) {\r\n        setDeleteModalIsOpen(true);\r\n        setVisitToDelete(visitId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    async function deleteVisitHandler() {\r\n        const deletedVisit = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${visitToDelete}`, 'DELETE', null,\r\n            {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + auth.token\r\n            });\r\n        setLoadedVisits(prevVisits => {\r\n            return prevVisits.filter(visit => visit._id !== deletedVisit._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container fluid className={classes.visits}>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={classes.cardsVisit}>\r\n                <ListsHeader type='Τύπος Επίσκεψης' date='Ημερομηνία' diagnosis='Διάγνωση' />\r\n                {!isLoading && <VisitsList visits={loadedVisits} onDelete={deleteHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deleteVisitHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this visit?Please note that it can't be undone once thereafter.\"/>}\r\n                {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n            </Card>\r\n            <Button />\r\n        </Container>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Visits;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js",["221","222"],"import classes from './VisitDetail.module.css';\r\nimport Card from \"../../UI/Card\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport BMI from './BMI';\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport moment from 'moment';\r\nimport { useState, useRef, useContext, useEffect } from 'react';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport { Fragment } from 'react';\r\nimport LoadingSpinner from '../../UI/LoadingSpinner';\r\n\r\n\r\n\r\nconst VisitDetail = (props) => {\r\n    // const [loadVisit,setLoadVisit]=useState({date:'',diagnosis:'',geniki_eikona,piesi,sfiksis,weight,height,test_volume,others})\r\n    const params = useParams();\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading,sendRequest, error, clearError } = useHttpClient();\r\n    const [loadVisit, setLoadVisit] = useState({ date: '', diagnosis: '', geniki_eikona: '', piesi: '', sfiksis: '', weight: '', height: '', test_volume: '', others: '', smkt: '', tekt: '' });\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n            setLoadVisit({ diagnosis: responseData.diagnosis, date: moment(responseData.date).format('YYYY-MM-DD'), tekt: responseData.tekt, smkt: responseData.smkt, geniki_eikona: responseData.geniki_eikona, piesi: responseData.piesi, sfiksis: responseData.sfiksis, weight: responseData.weight, height: responseData.height, test_volume: responseData.test_volume, others: responseData.others });\r\n        } catch (err) { }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (params.visitId !== 'new') {\r\n            fetchVisit()\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        if (params.visitId === 'new') {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'POST',\r\n                    JSON.stringify({\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                        uid: auth.userId\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                    }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n            } catch (err) { }\r\n        }\r\n        // if (!error) {\r\n        //     history.push(`/patients/${props.patientId}/visits`);\r\n        // }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            {isLoading&&<LoadingSpinner asOverlay/>}\r\n\r\n            <Container fluid className={classes.visitDetail}>\r\n                <Card className={classes.cardsVisitDetail}>\r\n                    <form onSubmit={submitHandler}>\r\n                        <Row className={` justify-content-md-start`}>\r\n                            <Col className={classes.label} lg='2'><h5>Στοιχεία Επίσκεψης</h5></Col>\r\n\r\n                            <Col className={classes.label} lg='2'><h5>Εργαστηριακές</h5></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Διάγνωση</label>\r\n                                <input ref={diagnosisInputRef} name='diagnosis' defaultValue={loadVisit.diagnosis} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Ημερομηνία*</label>\r\n                                <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={loadVisit.date} required />\r\n                                {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h4>Αντικειμενική Εξέταση</h4></Col></Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Γενική εικόνα</label>\r\n                                <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={classes.multiInputs}>\r\n                            <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                            <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                        </Row>\r\n                        <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                            <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                            <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                            <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                                <select ref={tektInputRef} name='tekt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                                <select ref={smktInputRef} name='smkt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                    <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                    <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                    <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                    <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n                        <Row >\r\n                            <Col sm='1' className='text-md-end'>\r\n                                <label htmlFor=\"others\">Άλλα</label>\r\n                            </Col>\r\n                            <Col sm='6'>\r\n                                <textarea ref={othersInputRef} id='others' defaultValue={loadVisit.others} name='others' rows='3' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col><SaveButton /></Col>\r\n                        </Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default VisitDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js",["223","224"],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js",["225"],"import { Container } from 'react-bootstrap';\r\nimport classes from './LabAnalysis.module.css';\r\nimport ListsHeader from '../../ListsHeader';\r\nimport LabsList from './LabsList';\r\nimport Card from \"../../UI/Card\";\r\nimport Button from '../../UI/Button';\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useEffect, useState, useContext, Fragment } from \"react\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport DeleteModal from \"../../UI/DeleteModal\";\r\nimport Backdrop from \"../../UI/Backdrop\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst LabAnalysis = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadedLabs, setLoadedLabs] = useState([]);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [labTestToDelete, setLabTestToDelete] = useState({ id: '', type: '' });\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const fetchLabTests = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests`, 'GET', null, { Authorization: 'Bearer ' + auth.token });\r\n                setLoadedLabs(responseData);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n\r\n        };\r\n        fetchLabTests();\r\n    }, [sendRequest]);\r\n\r\n    function deleteHandler(id, type) {\r\n        setDeleteModalIsOpen(true);\r\n        setLabTestToDelete({ id: id, type: type });\r\n    }\r\n\r\n    async function deleteLabTestHandler() {\r\n        let deletedLabTest\r\n        if (labTestToDelete.type === 'blood') {\r\n            deletedLabTest = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/blood/${labTestToDelete.id}`, 'DELETE', null,\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n        }\r\n        else if(labTestToDelete.type==='parathyro'){\r\n            deletedLabTest = await sendRequest(`http://localhost:5000/patients/${props.patientId}/lab_tests/parathyro/${labTestToDelete.id}`, 'DELETE', null,\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n\r\n        }\r\n        setLoadedLabs(prevTests => {\r\n            return prevTests.filter(test => test._doc._id !== deletedLabTest._id);\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Container fluid className={classes.labAnalysis}>\r\n                <Card className={classes.cardLab}>\r\n                    <ListsHeader type='Τύπος Εξέτασης' date='Ημερομηνία Εξέτασης' diagnosis='Ημερομηνία Επίσκεψης' />\r\n                    <LabsList labs={loadedLabs} onDelete={deleteHandler} />\r\n                    {deleteModalIsOpen && <DeleteModal onConfirm={deleteLabTestHandler} onCancel={closeDeleteModal} description=\"Do you want to proceed and delete this visit?Please note that it can't be undone once thereafter.\" />}\r\n                    {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n                </Card>\r\n                <Button />\r\n\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default LabAnalysis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js",["226","227"],"import { useState, useRef, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classes from './EditPatient.module.css';\r\nimport { AuthContext } from '../context/auth-context';\r\nimport ErrorModal from './UI/ErrorModal';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\n\r\n\r\n\r\nconst EditPatient = (props) => {\r\n    const [loadedPatient, setLoadedPatient] = useState({ sirname: \"\", name: \"\", fathersName: \"\", age: \"\", tel: \"\", amka: \"\" });\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const AgeInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n    const history = useHistory();\r\n\r\n    const { error, clearError, sendRequest } = useHttpClient();\r\n\r\n    const auth = useContext(AuthContext);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const data = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'GET', null, {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                });\r\n                setLoadedPatient({ sirname: data.sirname, name: data.name, fathersName: data.fathersName, age: data.age, tel: data.tel, amka: data.amka })\r\n                console.log(data)\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n\r\n\r\n\r\n    // fetch(`http://localhost:5000/patients/${props.patientId}`\r\n    // ).then((response) => {\r\n    //     return response.json()\r\n    // })\r\n    //     .then((data) => {\r\n    //         setLoadedPatient({ sirname: data.sirname, name: data.name, fathersName: data.fathersName, age: data.age, tel: data.tel, amka: data.amka });\r\n    //     })\r\n    //     .catch((err) => {\r\n    //         console.log(err.message);\r\n    //     });\r\n\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        const updatedPatient = {\r\n            sirname: sirnameInputRef.current.value,\r\n            name: nameInputRef.current.value,\r\n            fathersName: fathersNameInputRef.current.value,\r\n            age: AgeInputRef.current.value,\r\n            tel: TelInputRef.current.value,\r\n            amka: amkaInputRef.current.value\r\n        };\r\n        const response = await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'PATCH', JSON.stringify(updatedPatient),\r\n            {\r\n                Authorization: 'Bearer ' + auth.token,\r\n                'Content-Type': 'application/json'\r\n            })\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"my_modal\">\r\n            <div className={classes.form_style_5}>\r\n                <form onSubmit={submitHandler}>\r\n                    <fieldset>\r\n                        {!!error && <ErrorModal error={error} onClose={clearError} />}\r\n                        <legend>Patient Info</legend>\r\n                        <input ref={sirnameInputRef} type=\"text\" name=\"sirname\" placeholder=\"Επώνυμο *\" defaultValue={loadedPatient.sirname} required />\r\n                        <input ref={nameInputRef} type=\"text\" name=\"name\" placeholder=\"Όνομα *\" defaultValue={loadedPatient.name} required />\r\n                        <input ref={fathersNameInputRef} type=\"text\" name=\"fathersName\" placeholder=\"Πατρώνυμο \" defaultValue={loadedPatient.fathersName} />\r\n                        <input ref={AgeInputRef} type=\"text\" name=\"age\" placeholder=\"Ηλικία \" defaultValue={loadedPatient.age} />\r\n                        <input ref={TelInputRef} type=\"text\" name=\"tel\" placeholder=\"Τηλέφωνο *\" defaultValue={loadedPatient.tel} required />\r\n                        <input ref={amkaInputRef} type=\"text\" name=\"amka\" placeholder=\"ΑΜΚΑ \" defaultValue={loadedPatient.amka} />\r\n                        <button className=\"btn btn--alt\" type=\"button\" onClick={props.onClose}>Cancel</button>\r\n                        <button className=\"btn\" type='submit'>Edit </button>\r\n\r\n\r\n                    </fieldset>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPatient;","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabSelect.js",["228","229"],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":37,"column":8,"nodeType":"236","endLine":37,"endColumn":21,"suggestions":"237"},{"ruleId":"234","severity":1,"message":"238","line":39,"column":8,"nodeType":"236","endLine":39,"endColumn":21,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":21,"column":11,"nodeType":"242","messageId":"243","endLine":21,"endColumn":18},{"ruleId":"240","severity":1,"message":"244","line":30,"column":11,"nodeType":"242","messageId":"243","endLine":30,"endColumn":30},{"ruleId":"234","severity":1,"message":"245","line":49,"column":8,"nodeType":"236","endLine":49,"endColumn":21,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":105,"column":23,"nodeType":"249","messageId":"250","endLine":105,"endColumn":25},{"ruleId":"247","severity":1,"message":"248","line":105,"column":33,"nodeType":"249","messageId":"250","endLine":105,"endColumn":35},{"ruleId":"234","severity":1,"message":"251","line":33,"column":8,"nodeType":"236","endLine":33,"endColumn":10,"suggestions":"252"},{"ruleId":"240","severity":1,"message":"253","line":21,"column":11,"nodeType":"242","messageId":"243","endLine":21,"endColumn":28},{"ruleId":"234","severity":1,"message":"254","line":42,"column":8,"nodeType":"236","endLine":42,"endColumn":37,"suggestions":"255"},{"ruleId":"240","severity":1,"message":"253","line":22,"column":11,"nodeType":"242","messageId":"243","endLine":22,"endColumn":28},{"ruleId":"234","severity":1,"message":"254","line":42,"column":8,"nodeType":"236","endLine":42,"endColumn":37,"suggestions":"256"},{"ruleId":"234","severity":1,"message":"245","line":34,"column":8,"nodeType":"236","endLine":34,"endColumn":21,"suggestions":"257"},{"ruleId":"240","severity":1,"message":"258","line":10,"column":21,"nodeType":"242","messageId":"243","endLine":10,"endColumn":31},{"ruleId":"234","severity":1,"message":"259","line":53,"column":8,"nodeType":"236","endLine":53,"endColumn":10,"suggestions":"260"},{"ruleId":"240","severity":1,"message":"261","line":3,"column":20,"nodeType":"242","messageId":"243","endLine":3,"endColumn":29},{"ruleId":"262","severity":1,"message":"263","line":32,"column":41,"nodeType":"264","messageId":"265","endLine":32,"endColumn":43},{"ruleId":"234","severity":1,"message":"245","line":36,"column":8,"nodeType":"236","endLine":36,"endColumn":21,"suggestions":"266"},{"ruleId":"234","severity":1,"message":"245","line":37,"column":8,"nodeType":"236","endLine":37,"endColumn":21,"suggestions":"267"},{"ruleId":"240","severity":1,"message":"268","line":62,"column":15,"nodeType":"242","messageId":"243","endLine":62,"endColumn":23},{"ruleId":"240","severity":1,"message":"269","line":10,"column":8,"nodeType":"242","messageId":"243","endLine":10,"endColumn":16},{"ruleId":"234","severity":1,"message":"245","line":29,"column":8,"nodeType":"236","endLine":29,"endColumn":21,"suggestions":"270"},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.token' and 'auth.userId'. Either include them or remove the dependency array.","ArrayExpression",["273"],"React Hook useEffect has missing dependencies: 'auth.token' and 'patientId'. Either include them or remove the dependency array.",["274"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'dateOfBirthInputRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.token' and 'props.patientId'. Either include them or remove the dependency array.",["275"],"no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'auth.token', 'props.patientId', and 'sendRequest'. Either include them or remove the dependency array.",["276"],"'visitDateInputRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchVisit', 'params.labId', and 'params.type'. Either include them or remove the dependency array.",["277"],["278"],["279"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchVisit' and 'params.visitId'. Either include them or remove the dependency array.",["280"],"'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["281"],["282"],"'response' is assigned a value but never used.","'Backdrop' is defined but never used.",["283"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"288","fix":"290"},{"desc":"291","fix":"292"},{"desc":"291","fix":"293"},{"desc":"288","fix":"294"},{"desc":"295","fix":"296"},{"desc":"288","fix":"297"},{"desc":"288","fix":"298"},{"desc":"288","fix":"299"},"Update the dependencies array to be: [auth.token, auth.userId, sendRequest]",{"range":"300","text":"301"},"Update the dependencies array to be: [auth.token, patientId, sendRequest]",{"range":"302","text":"303"},"Update the dependencies array to be: [auth.token, props.patientId, sendRequest]",{"range":"304","text":"305"},{"range":"306","text":"305"},"Update the dependencies array to be: [props.patientId, auth.token, params.labId, params.type, fetchVisit]",{"range":"307","text":"308"},{"range":"309","text":"308"},{"range":"310","text":"305"},"Update the dependencies array to be: [fetchVisit, params.visitId]",{"range":"311","text":"312"},{"range":"313","text":"305"},{"range":"314","text":"305"},{"range":"315","text":"305"},[1671,1684],"[auth.token, auth.userId, sendRequest]",[1789,1802],"[auth.token, patientId, sendRequest]",[2080,2093],"[auth.token, props.patientId, sendRequest]",[1530,1532],[2075,2104],"[props.patientId, auth.token, params.labId, params.type, fetchVisit]",[1967,1996],[1355,1368],[2463,2465],"[fetchVisit, params.visitId]",[1442,1455],[1411,1424],[1088,1101]]