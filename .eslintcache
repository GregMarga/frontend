[{"D:\\Διπλωματική\\project\\frontend\\src\\index.js":"1","D:\\Διπλωματική\\project\\frontend\\src\\App.js":"2","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js":"3","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointments.js":"4","D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js":"5","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js":"6","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js":"7","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js":"8","D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js":"9","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js":"10","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js":"11","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js":"12","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js":"13","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js":"14","D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js":"15","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js":"16","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History.js":"17","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js":"18","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js":"19","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js":"20","D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js":"21","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js":"22","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js":"23","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js":"24","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js":"25","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js":"26","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js":"27","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js":"28","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js":"29","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js":"30","D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js":"31","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js":"32","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js":"33","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js":"34","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js":"35","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js":"36","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js":"37","D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js":"38","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js":"39","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js":"40","D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js":"41","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js":"42","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js":"43","D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js":"44","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js":"45","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js":"46","D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js":"47","D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js":"48"},{"size":260,"mtime":1651833409357,"results":"49","hashOfConfig":"50"},{"size":1681,"mtime":1655053417292,"results":"51","hashOfConfig":"50"},{"size":4151,"mtime":1655052663821,"results":"52","hashOfConfig":"50"},{"size":97,"mtime":1651833197568,"results":"53","hashOfConfig":"50"},{"size":1515,"mtime":1654605434854,"results":"54","hashOfConfig":"50"},{"size":1810,"mtime":1653408200043,"results":"55","hashOfConfig":"50"},{"size":1298,"mtime":1655051555972,"results":"56","hashOfConfig":"50"},{"size":1946,"mtime":1654511672529,"results":"57","hashOfConfig":"50"},{"size":2766,"mtime":1654883155371,"results":"58","hashOfConfig":"50"},{"size":222,"mtime":1652096209126,"results":"59","hashOfConfig":"50"},{"size":792,"mtime":1654802892489,"results":"60","hashOfConfig":"50"},{"size":122,"mtime":1652200578637,"results":"61","hashOfConfig":"50"},{"size":232,"mtime":1654429189609,"results":"62","hashOfConfig":"50"},{"size":2623,"mtime":1655052609696,"results":"63","hashOfConfig":"50"},{"size":4060,"mtime":1652805358570,"results":"64","hashOfConfig":"50"},{"size":10860,"mtime":1654862942869,"results":"65","hashOfConfig":"50"},{"size":5481,"mtime":1654881126324,"results":"66","hashOfConfig":"50"},{"size":526,"mtime":1652361098154,"results":"67","hashOfConfig":"50"},{"size":3110,"mtime":1653301295022,"results":"68","hashOfConfig":"50"},{"size":3340,"mtime":1652611955136,"results":"69","hashOfConfig":"50"},{"size":328,"mtime":1654877233072,"results":"70","hashOfConfig":"50"},{"size":3657,"mtime":1652696611494,"results":"71","hashOfConfig":"50"},{"size":2552,"mtime":1652697451054,"results":"72","hashOfConfig":"50"},{"size":2721,"mtime":1654970172524,"results":"73","hashOfConfig":"50"},{"size":995,"mtime":1654968392119,"results":"74","hashOfConfig":"50"},{"size":1340,"mtime":1654968464066,"results":"75","hashOfConfig":"50"},{"size":11199,"mtime":1654966847263,"results":"76","hashOfConfig":"50"},{"size":456,"mtime":1654886504748,"results":"77","hashOfConfig":"50"},{"size":4152,"mtime":1653323128559,"results":"78","hashOfConfig":"50"},{"size":1137,"mtime":1653324411316,"results":"79","hashOfConfig":"50"},{"size":782,"mtime":1653558423777,"results":"80","hashOfConfig":"50"},{"size":529,"mtime":1653558097954,"results":"81","hashOfConfig":"50"},{"size":1169,"mtime":1653559108842,"results":"82","hashOfConfig":"50"},{"size":381,"mtime":1654444029469,"results":"83","hashOfConfig":"50"},{"size":323,"mtime":1654510683191,"results":"84","hashOfConfig":"50"},{"size":304,"mtime":1654283542063,"results":"85","hashOfConfig":"50"},{"size":591,"mtime":1654451036276,"results":"86","hashOfConfig":"50"},{"size":4123,"mtime":1655054849210,"results":"87","hashOfConfig":"50"},{"size":5049,"mtime":1655053609073,"results":"88","hashOfConfig":"50"},{"size":1940,"mtime":1654598731892,"results":"89","hashOfConfig":"50"},{"size":406,"mtime":1654528326660,"results":"90","hashOfConfig":"50"},{"size":1710,"mtime":1654529564944,"results":"91","hashOfConfig":"50"},{"size":1506,"mtime":1654598496357,"results":"92","hashOfConfig":"50"},{"size":185,"mtime":1655052061232,"results":"93","hashOfConfig":"50"},{"size":273,"mtime":1573657440000,"results":"94","hashOfConfig":"50"},{"size":545,"mtime":1654632847208,"results":"95","hashOfConfig":"50"},{"size":1495,"mtime":1654684099313,"results":"96","hashOfConfig":"50"},{"size":209,"mtime":1654688399835,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"qiatdq",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Διπλωματική\\project\\frontend\\src\\index.js",[],["202","203"],"D:\\Διπλωματική\\project\\frontend\\src\\App.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\Patients.js",["204"],"import { Container } from 'react-bootstrap';\r\nimport PatientsList from '../components/PatientsList';\r\nimport PatientsListHeader from '../components/PatientsListHeader';\r\nimport Backdrop from '../components/UI/Backdrop';\r\nimport classes from './Patients.module.css';\r\nimport Modal from '../components/UI/Modal';\r\nimport DeleteModal from '../components/UI/DeleteModal';\r\nimport EditPatient from '../components/EditPatient';\r\nimport ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { useState, useEffect,useContext } from 'react';\r\nimport { AuthContext } from '../context/auth-context';\r\n\r\nconst Patients = () => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n    const [loadedPatients, setLoadedPatients] = useState([]);\r\n    const [patientToDelete, setPatientToDelete] = useState();\r\n    const [patientToEdit, setPatientToEdit] = useState();\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n    const auth=useContext(AuthContext);\r\n   \r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\"http://localhost:5000/patients\",'GET',null,{\r\n                    Authorization:'Bearer '+auth.token\r\n                });\r\n                setLoadedPatients(responseData);\r\n            }catch(err){ }\r\n            \r\n        };\r\n        fetchPatients();\r\n    }, [sendRequest]);\r\n \r\n    function addPatientHandler() {\r\n        setModalIsOpen(true);\r\n    }\r\n\r\n    function closeHandler() {\r\n        setModalIsOpen(false);\r\n    }\r\n    function deleteHandler(patientId) {\r\n        setDeleteModalIsOpen(true);\r\n        setPatientToDelete(patientId);\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    function editHandler(patientId) {\r\n        setEditModalIsOpen(true);\r\n        setPatientToEdit(patientId);\r\n        console.log(patientId);\r\n    }\r\n    function closeEditModal() {\r\n        setEditModalIsOpen(false);\r\n    }\r\n    function submitPatientHandler(patient) {\r\n        setLoadedPatients(prevPatients => {\r\n            return [patient, ...prevPatients];\r\n        });\r\n    }\r\n    async function deletePatientHandler() {\r\n        const response = await fetch(`http://localhost:5000/patients/${patientToDelete}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization:'Bearer '+auth.token\r\n            }\r\n        });\r\n        const deletedPatient = await response.json();\r\n        setLoadedPatients(prevPatients => {\r\n            return prevPatients.filter(patient => patient._id !== deletedPatient._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    return (\r\n        <div className={classes.test}>\r\n\r\n            <Container>\r\n                {!isLoading&&loadedPatients&&<PatientsListHeader />}\r\n                {isLoading&&<LoadingSpinner asOverlay/>}\r\n                {!!error&&<ErrorModal error={error} onClear={clearError}/>}\r\n                {!isLoading&&loadedPatients&&<PatientsList patients={loadedPatients} onDelete={deleteHandler} onEdit={editHandler} />}\r\n                <button onClick={addPatientHandler} className={classes.addButton}>Add Patient +</button>\r\n                {modalIsOpen && <Modal onClose={closeHandler} onSubmit={submitPatientHandler} patients={loadedPatients} />}\r\n                {modalIsOpen && <Backdrop onClick={closeHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deletePatientHandler} onCancel={closeDeleteModal} />}\r\n                {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n                {editModalIsOpen && <Backdrop onClick={closeEditModal} />}\r\n                {editModalIsOpen && <EditPatient onClose={closeEditModal} patientId={patientToEdit} />}\r\n\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patients;","D:\\Διπλωματική\\project\\frontend\\src\\pages\\Appointments.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\SideNavigation.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\pages\\PatientDetail.js",["205"],"import { Fragment } from 'react';\r\nimport { useParams, Switch, Route } from 'react-router-dom'\r\nimport Header from '../components/Header';\r\nimport Basic from '../components/Patient-Details-Pages/Basic';\r\nimport ClinicalExamination from '../components/Patient-Details-Pages/ClinicalExamination';\r\nimport History from '../components/Patient-Details-Pages/History';\r\nimport LabAnalysis from '../components/Patient-Details-Pages/LabAnalysis/LabAnalysis';\r\nimport Visits from '../components/Patient-Details-Pages/Visits/Visits';\r\nimport PatientId from '../components/PatientId';\r\nimport classes from './PatientDetail.module.css';\r\nimport VisitDetail from '../components/Patient-Details-Pages/Visits/VisitDetail';\r\n// import { PatientContext } from '../context/patient-context';\r\nimport { useState,useEffect} from 'react';\r\n\r\n\r\n\r\nconst PatientDetail = () => {\r\n    const [loadedPatient, setLoadedPatient] = useState({name:'',sirname:'',age:'',amka:'',fathersName:'',tel:''});\r\n    const params = useParams();\r\n    const patientId = params.patientId;\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5000/patients/${patientId}`\r\n        ).then((response) => {\r\n            return response.json()\r\n        })\r\n            .then((data) => {\r\n                setLoadedPatient(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message);\r\n            });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header patientId={params.patientId} />\r\n            <PatientId  patient={loadedPatient} />\r\n            <h5 className={classes.mytitle}>Τα πεδία με <span>* </span>είναι απαραίτητα</h5>\r\n\r\n            <Switch>\r\n                <Route path={`/patients/${params.patientId}/basic`} exact><Basic patient={loadedPatient} patientId={patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/anamnistiko`}><History patientId={patientId}/></Route>\r\n                <Route path={`/patients/${params.patientId}/visits`} exact><div><Visits patientId={patientId}/></div></Route>\r\n                <Route path={`/patients/${params.patientId}/clinical`}><ClinicalExamination /></Route>\r\n                <Route path={`/patients/${params.patientId}/lab_test`}><LabAnalysis patientId={patientId}/></Route>\r\n                {/* <Route path={`/patients/62a0e2f4086903904ac8683e/visits/new`}><p>Please Work motherfuckerrrrrrrrrrrrrrrrrrrrr</p></Route> */}\r\n                {/* <Route path={`/patients/${params.patientId}/lab_test/:labId`}><NewLabAnalysis/></Route> */}\r\n                <Route path={`/patients/${params.patientId}/visits/:visitId`}><VisitDetail patientId={params.patientId}/></Route>\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default PatientDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Card.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Backdrop.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\Modal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\PatientForm.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Header.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Basic.js",["206","207","208","209"],"import { Fragment } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './Basic.module.css';\r\nimport SaveButton from '../UI/SaveButton';\r\n// import ErrorModal from '../components/UI/ErrorModal';\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useHttpClient } from '../../hooks/http-hook';\r\n\r\n\r\n\r\nconst Basic = (props) => {\r\n\r\n    const [loadedBasics, setLoadedBasics] = useState({ dateOfBirth: '', job: '', gender: '', area: '', address: '', postalCode: '', familyStatus: '' })\r\n\r\n    const { isLoading,error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const sirnameInputRef = useRef();\r\n    const nameInputRef = useRef();\r\n    const fathersNameInputRef = useRef();\r\n    const AgeInputRef = useRef();\r\n    const TelInputRef = useRef();\r\n    const amkaInputRef = useRef();\r\n\r\n    const dateOfBirthInputRef = useRef();\r\n    const placeOfBirthInputRef = useRef();\r\n    const jobInputRef = useRef();\r\n    const familyStatusInputRef = useRef();\r\n    const genderInputRef = useRef();\r\n    const addressInputRef = useRef();\r\n    const areaInputRef = useRef();\r\n    const postalCodeRef = useRef();\r\n    const emailInputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/basic`);\r\n                setLoadedBasics({ placeOfBirth: responseData.placeOfBirth, address: responseData.address, area: responseData.area, job: responseData.job, familyStatus: responseData.familyStatus, gender: responseData.gender, postalCode: responseData.postalCode });\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchPatients();\r\n    }, []);\r\n\r\n\r\n\r\n    const submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        console.log(placeOfBirthInputRef.current.value)\r\n        try {\r\n            await sendRequest(`http://localhost:5000/patients/${props.patientId}`, 'PATCH',\r\n                JSON.stringify({\r\n                    name: nameInputRef.current.value,\r\n                    sirname: sirnameInputRef.current.value,\r\n                    fathersName: fathersNameInputRef.current.value,\r\n                    age: AgeInputRef.current.value,\r\n                    amka: amkaInputRef.current.value,\r\n                    tel: TelInputRef.current.value\r\n                }), {\r\n                'Content-Type': 'application/json'\r\n            });\r\n        } catch (err) { }\r\n\r\n        try {\r\n            await sendRequest(`http://localhost:5000/patients/${props.patientId}/basic`, 'POST',\r\n                JSON.stringify({\r\n                    placeOfBirth: placeOfBirthInputRef.current.value,\r\n                    job: jobInputRef.current.value,\r\n                    familyStatus: familyStatusInputRef.current.value,\r\n                    gender: genderInputRef.current.value,\r\n                    address: addressInputRef.current.value,\r\n                    area: areaInputRef.current.value,\r\n                    postalCode: postalCodeRef.current.value,\r\n\r\n                }), {\r\n                'Content-Type': 'application/json'\r\n            });\r\n        } catch (err) { }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {isLoading&&<LoadingSpinner asOverlay/>}\r\n\r\n            {!isLoading &&<form className={classes.basicForm} onSubmit={submitHandler}>\r\n\r\n                <Container >\r\n\r\n                    <Row className='justify-content-center '>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"sirname\">Επώνυμο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input id='sirname' type='text' ref={sirnameInputRef} required defaultValue={props.patient.sirname} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"name\">Όνομα<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={nameInputRef} id='name' type='text' required defaultValue={props.patient.name} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"fathers-name\">Πατρώνυμο</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={fathersNameInputRef} name='fathersName' id='fathers-name' type='text' defaultValue={props.patient.fathersName} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"age\">Έτος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={AgeInputRef} id='age' type='text' name=\"age\" defaultValue={props.patient.age} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"birth_place\" >Τόπος Γεννήσεως</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={placeOfBirthInputRef} id='birth_place' type='text' name=\"placeOfBirth\" defaultValue={loadedBasics.placeOfBirth} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"amka\"  >ΑΜΚΑ</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={amkaInputRef} name='amka' id='amka' type='text' defaultValue={props.patient.amka} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"tel\" >Τηλέφωνο<span>* </span></label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={TelInputRef} name='tel' id='tel' type='text' defaultValue={props.patient.tel} required />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"job\">Επάγγελμα</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <input ref={jobInputRef} name='job' id='job' type='text' defaultValue={loadedBasics.job} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"family_status\">Οικογενειακή Κατάσταση</label>\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <select ref={familyStatusInputRef} id='family_status' name='family_status'>\r\n                                <option value=\"none\" selected disabled hidden>Select an Option</option>\r\n                                <option value='married'selected={loadedBasics.familyStatus ==='married'} >Παντρεμμένος/η</option>\r\n                                <option value='notmarried'selected={loadedBasics.familyStatus ==='notmarried'}>Ανύπνατρος/η</option>\r\n                                <option value='divorced' selected={loadedBasics.familyStatus ==='divorced'}>Διαζευγμένος/η</option>\r\n                            </select>\r\n                            {/* <input id='family_status' type='text' /> */}\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"gender\">Φύλο</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <select ref={genderInputRef} name='gender' id='gender'  >\r\n                                <option value=\"none\" selected disabled hidden>Select an Option</option>\r\n                                <option value='male'selected={loadedBasics.gender ==='male'}>Άρρεν</option>\r\n                                <option value='female' selected={loadedBasics.gender ==='female'}>Θήλυ</option>\r\n                                <option value='other' selected={loadedBasics.gender ==='other'}>Άλλο</option>\r\n                            </select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"address\">Διεύθυνση</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={addressInputRef} id='address' type='text' name='address' defaultValue={loadedBasics.address} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"location\">Περιοχή</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={areaInputRef} id='location' name=\"area\" type='text' defaultValue={loadedBasics.area} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='justify-content-center'>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"postalcode\">Τ.Κ</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={postalCodeRef} id='postalcode' name='postalCode' type='text' defaultValue={loadedBasics.postalCode} />\r\n                        </Col>\r\n                        <Col className='text-sm-end '>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </Col>\r\n                        <Col className='text-start'>\r\n                            <input ref={emailInputRef} id='email' type='text' name=\"email\" />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row >\r\n                        <Col  ><SaveButton /></Col>\r\n                    </Row>\r\n\r\n\r\n\r\n                </Container>\r\n            </form>}\r\n\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Basic;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\History.js",["210"],"import { Container, Col, Row } from \"react-bootstrap\";\r\nimport classes from './History.module.css';\r\nimport SaveButton from '../UI/SaveButton'\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { useState,useEffect,useRef, Fragment } from \"react\";\r\n\r\nconst History = (props) => {\r\n    const {isLoading,sendRequest}=useHttpClient();\r\n\r\n    const [loadAnamnistiko,setLoadAnamnistiko]=useState({allergies:'',cleronomical:'',personal:'',surgeries:'',drug_usage:'',others:''})\r\n    const allergiesInputRef=useRef();\r\n    const cleronomicalInputRef=useRef();\r\n    const personalInputRef=useRef();\r\n    const surgeriesInputRef=useRef();\r\n    const drug_usageInputRef=useRef();\r\n    const othersInputRef=useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/anamnistiko`);\r\n                setLoadAnamnistiko({allergies:responseData.allergies,cleronomical:responseData.cleronomical,personal:responseData.personal,drug_usage:responseData.drug_usage,surgeries:responseData.surgeries,others:responseData.others});\r\n            }catch(err){ }\r\n            \r\n        };\r\n        fetchHistory();\r\n    }, []);\r\n\r\n    const submitHandler=async(event)=>{\r\n        event.preventDefault();\r\n        try {\r\n            await sendRequest(`http://localhost:5000/patients/${props.patientId}/anamnistiko`, 'POST',\r\n                JSON.stringify({\r\n                    allergies:allergiesInputRef.current.value,\r\n                    cleronomical:cleronomicalInputRef.current.value,\r\n                    personal:personalInputRef.current.value,\r\n                    surgeries:surgeriesInputRef.current.value,\r\n                    drug_usage:drug_usageInputRef.current.value,\r\n                    others:othersInputRef.current.value\r\n                    \r\n\r\n                }), {\r\n                'Content-Type': 'application/json'\r\n            });\r\n        } catch (err) {}\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n             {isLoading&&<LoadingSpinner asOverlay/>}\r\n       \r\n        <form className={classes.history} onSubmit={submitHandler}>\r\n            <Container >\r\n                <Row className='justify-content-center '>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"allergies\">Αλλεργίες</label>\r\n                    </Col>\r\n                    <Col className='text-sm-start'>\r\n                        <textarea ref={allergiesInputRef} id='allergies' rows='3' defaultValue={loadAnamnistiko.allergies}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"klironomiko\" >Κληρονομικό</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={cleronomicalInputRef} id='klironomiko' rows='3' defaultValue={loadAnamnistiko.cleronomical}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"fathers-name\">Ατομικό</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={personalInputRef} id='fathers-name' rows='3' defaultValue={loadAnamnistiko.personal}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"surgeries\">Εγχειρήσεις-Τοκετοί</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={surgeriesInputRef} id='surgeries' rows='3' defaultValue={loadAnamnistiko.surgeries}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"drugs_use\">Χρόνια Χρήση Φαρμάκων</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={drug_usageInputRef} name='drug_usage' id='drugs_use' rows='3' defaultValue={loadAnamnistiko.drug_usage}/>\r\n                    </Col>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor='smoking-alcohol'>Κάπνισμα-Άλκοολ</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea id='smoking-alcohol'name='smoking_alcohol' rows='3' defaultValue={''}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Col className='text-sm-end '>\r\n                        <label htmlFor=\"others\">Άλλα</label>\r\n                    </Col>\r\n                    <Col className='text-start'>\r\n                        <textarea ref={othersInputRef} name='others' id='others' rows='4' defaultValue={loadAnamnistiko.others}/>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Row >\r\n                        <Col  ><SaveButton/></Col>\r\n                    </Row>\r\n\r\n            </Container>\r\n        </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default History;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\ClinicalExamination.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\GeneralBlood.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Thyro.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\PatientId.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Ypofysi.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\Parathyro.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\Visits.js",["211"],"import ListsHeader from \"../../ListsHeader\";\r\nimport classes from './Visits.module.css';\r\nimport { Container } from \"react-bootstrap\";\r\nimport VisitsList from \"./VisitsList\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport DeleteModal from \"../../UI/DeleteModal\";\r\nimport Backdrop from \"../../UI/Backdrop\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\n\r\n\r\n\r\nconst Visits = (props) => {\r\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\r\n    const [loadedVisits, setLoadedVisits] = useState([]);\r\n    const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n    const [visitToDelete, setVisitToDelete] = useState();\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            try {\r\n                const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`);\r\n                setLoadedVisits(responseData);\r\n            } catch (err) { }\r\n\r\n        };\r\n        fetchHistory();\r\n    }, [sendRequest]);\r\n\r\n    function deleteHandler(visitId) {\r\n        setDeleteModalIsOpen(true);\r\n        setVisitToDelete(visitId);\r\n        console.log(visitId)\r\n    }\r\n    function closeDeleteModal() {\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n    async function deleteVisitHandler() {\r\n        const deletedVisit = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${visitToDelete}`, 'DELETE'\r\n            , {\r\n                'Content-Type': 'application/json'\r\n            });\r\n        setLoadedVisits(prevVisits => {\r\n            return prevVisits.filter(visit => visit._id !== deletedVisit._id)\r\n        })\r\n        setDeleteModalIsOpen(false);\r\n    }\r\n\r\n\r\n    function addVisitsHandler() { }\r\n\r\n    return (\r\n\r\n        <Container fluid className={classes.visits}>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n            <Card className={classes.cardsVisit}>\r\n                <ListsHeader type='Τύπος Επίσκεψης' date='Ημερομηνία' diagnosis='Διάγνωση' />\r\n                {!isLoading && <VisitsList visits={loadedVisits} onDelete={deleteHandler} />}\r\n                {deleteModalIsOpen && <DeleteModal onConfirm={deleteVisitHandler} onCancel={closeDeleteModal} />}\r\n                {deleteModalIsOpen && <Backdrop onClick={closeDeleteModal} />}\r\n            </Card>\r\n            <Button addHandler={addVisitsHandler} />\r\n        </Container>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Visits;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitsListItems.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\VisitDetail.js",["212","213"],"import classes from './VisitDetail.module.css';\r\nimport Card from \"../../UI/Card\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport BMI from './BMI';\r\nimport SaveButton from '../../UI/SaveButton';\r\nimport moment from 'moment';\r\nimport { useState, useRef, useContext, useEffect } from 'react';\r\nimport { useHttpClient } from '../../../hooks/http-hook';\r\nimport { AuthContext } from '../../../context/auth-context';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ErrorModal from '../../UI/ErrorModal';\r\nimport { Fragment } from 'react';\r\n\r\n\r\n\r\nconst VisitDetail = (props) => {\r\n    // const [loadVisit,setLoadVisit]=useState({date:'',diagnosis:'',geniki_eikona,piesi,sfiksis,weight,height,test_volume,others})\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n    const { sendRequest, error, clearError } = useHttpClient();\r\n    const [loadVisit, setLoadVisit] = useState({ date: '', diagnosis: '', geniki_eikona: '', piesi: '', sfiksis: '', weight: '', height: '', test_volume: '', others: '', smkt: '', tekt: '' });\r\n    const [bmiParams, setBmiParams] = useState({\r\n        weight: 1,\r\n        height: 1\r\n    }\r\n    );\r\n\r\n    const dateInputRef = useRef();\r\n    const diagnosisInputRef = useRef();\r\n    const geniki_eikonaInputRef = useRef();\r\n    const sfiksisInputRef = useRef();\r\n    const piesiInputRef = useRef();\r\n    const weightInputRef = useRef();\r\n    const heightInputRef = useRef();\r\n    const test_volumeInputRef = useRef();\r\n    const othersInputRef = useRef();\r\n    const tektInputRef = useRef();\r\n    const smktInputRef = useRef();\r\n\r\n    const fetchVisit = async () => {\r\n        try {\r\n            const responseData = await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`);\r\n            console.log(responseData)\r\n            setLoadVisit({ diagnosis: responseData.diagnosis, date: moment(responseData.date).format('YYYY-MM-DD'), tekt: responseData.tekt, smkt: responseData.smkt, geniki_eikona: responseData.geniki_eikona, piesi: responseData.piesi, sfiksis: responseData.sfiksis, weight: responseData.weight, height: responseData.height, test_volume: responseData.test_volume, others: responseData.others });\r\n        } catch (err) { }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (params.visitId !== 'new') {\r\n            fetchVisit()\r\n        }\r\n    }, []);\r\n\r\n\r\n\r\n    function changeHeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            height: event.target.value\r\n        });\r\n    }\r\n    function changeWeightHandler(event) {\r\n        setBmiParams({\r\n            ...bmiParams,\r\n            weight: event.target.value\r\n        });\r\n    }\r\n    async function submitHandler(event) {\r\n        event.preventDefault();\r\n        console.log(dateInputRef.current.value)\r\n        if (params.visitId === 'new') {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits`, 'POST',\r\n                    JSON.stringify({\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                        uid: auth.userId\r\n                    }), {\r\n                    'Content-Type': 'application/json'\r\n                });\r\n            } catch (err) { }\r\n        } else {\r\n            try {\r\n                await sendRequest(`http://localhost:5000/patients/${props.patientId}/visits/${params.visitId}`, 'PATCH',\r\n                    JSON.stringify({\r\n                        date: dateInputRef.current.value,\r\n                        diagnosis: diagnosisInputRef.current.value,\r\n                        piesi: piesiInputRef.current.value,\r\n                        sfiksis: sfiksisInputRef.current.value,\r\n                        weight: weightInputRef.current.value,\r\n                        height: heightInputRef.current.value,\r\n                        smkt: smktInputRef.current.value,\r\n                        tekt: tektInputRef.current.value,\r\n                        test_volume: test_volumeInputRef.current.value,\r\n                        others: othersInputRef.current.value,\r\n                    }), {\r\n                    'Content-Type': 'application/json'\r\n                });\r\n            } catch (err) { }\r\n        }\r\n        // if (!error) {\r\n        //     history.push(`/patients/${props.patientId}/visits`);\r\n        // }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {!!error && <ErrorModal error={error} onClear={clearError} />}\r\n\r\n            <Container fluid className={classes.visitDetail}>\r\n                <Card className={classes.cardsVisitDetail}>\r\n                    <form onSubmit={submitHandler}>\r\n                        <Row className={` justify-content-md-start`}>\r\n                            <Col className={classes.label} lg='2'><h5>Στοιχεία Επίσκεψης</h5></Col>\r\n\r\n                            <Col className={classes.label} lg='2'><h5>Εργαστηριακές</h5></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Διάγνωση</label>\r\n                                <input ref={diagnosisInputRef} name='diagnosis' defaultValue={loadVisit.diagnosis} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Ημερομηνία*</label>\r\n                                <input ref={dateInputRef} className={classes.date} name='date' type='date' defaultValue={loadVisit.date} required />\r\n                                {/* <input  className={classes.date} name='date' type='date' required /> */}\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h4>Αντικειμενική Εξέταση</h4></Col></Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Γενική εικόνα</label>\r\n                                <input ref={geniki_eikonaInputRef} name='geniki_eikona' defaultValue={loadVisit.geniki_eikona} className={classes.fullSize} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className={classes.multiInputs}>\r\n                            <Col><label >Αρτηριακή πίεση</label><input ref={piesiInputRef} name='piesi' defaultValue={loadVisit.piesi} /></Col>\r\n                            <Col ><label >Σφύξεις</label><input ref={sfiksisInputRef} name='sfiksis' defaultValue={loadVisit.sfiksis} /></Col>\r\n\r\n\r\n                        </Row>\r\n                        <Row className={`justify-content-start ${classes.threeInput}`}>\r\n                            <Col lg='3'><label >Βάρος</label> <input ref={weightInputRef} name='weight' defaultValue={loadVisit.weight} onChange={changeWeightHandler} /></Col>\r\n                            <Col lg='3'><label >Ύψος</label> <input ref={heightInputRef} name='height' defaultValue={loadVisit.height} onChange={changeHeightHandler} /></Col>\r\n                            <Col lg='3' className={classes.readOnly}><BMI height={bmiParams.height} weight={bmiParams.weight} /></Col>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col> <span className={classes.subtitle}>Γεννετικά Όργανα</span></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Τριχοφυΐα Εφηβαίου Κατά Tanner</label>\r\n                                <select ref={tektInputRef} name='tekt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>1</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>2</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>3</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>4</option>\r\n                                    <option value={1} selected={loadVisit.tekt === 1}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <label>Στάδιο Μαστών Κατά Tanner</label>\r\n                                <select ref={smktInputRef} name='smkt'>\r\n                                    <option value={0} selected disabled hidden>Select an Option</option>\r\n                                    <option value={1} selected={loadVisit.smkt === 1}>1</option>\r\n                                    <option value={2} selected={loadVisit.smkt === 2}>2</option>\r\n                                    <option value={3} selected={loadVisit.smkt === 3}>3</option>\r\n                                    <option value={4} selected={loadVisit.smkt === 4}>4</option>\r\n                                    <option value={5} selected={loadVisit.smkt === 5}>5</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className={classes.threeInput}><label>Όγκος Όρχεων(ml)</label><input ref={test_volumeInputRef} defaultValue={loadVisit.test_volume} name='test_volume' /></Col>\r\n                        </Row>\r\n                        <Row>\r\n\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\"><Col md='10' className='text-center'><h2> </h2></Col></Row>\r\n                        <Row >\r\n                            <Col sm='1' className='text-md-end'>\r\n                                <label htmlFor=\"others\">Άλλα</label>\r\n                            </Col>\r\n                            <Col sm='6'>\r\n                                <textarea ref={othersInputRef} id='others' defaultValue={loadVisit.others} name='others' rows='3' />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col><SaveButton /></Col>\r\n                        </Row>\r\n                    </form>\r\n                </Card>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default VisitDetail;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\Visits\\BMI.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\NewLabAnalysis.js",["214"],"import classes from './NewLabAnalysis.module.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useState,useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport GeneralBlood from './GeneralBlood';\r\nimport Thyro from './Thyro';\r\nimport Ypofysi from './Ypofysi';\r\nimport Parathyro from './Parathyro';\r\n\r\nconst NewLabAnalysis = (props) => {\r\n    const defaultState={\r\n        blood: false,\r\n        thyro: false,\r\n        parathyro: false,\r\n        ypofysi: false,\r\n        epinefridio: false,\r\n        eggs: false,\r\n        balls: false\r\n      }\r\n    const [labAnalysisType, setLabAnalysisType] = useState({...defaultState,blood:true});\r\n    const [locationKeys, setLocationKeys] = useState([]);\r\n    const history=useHistory();\r\n    useEffect(() => {\r\n        return history.listen((location) => {\r\n          if (history.action === \"PUSH\") {\r\n            setLocationKeys([location.key]);\r\n          }\r\n    \r\n          if (history.action === \"POP\") {\r\n            if (locationKeys[1] === location.key) {\r\n              setLocationKeys(([_, ...keys]) => keys);\r\n    \r\n              // Handle forward event\r\n            } else {\r\n              setLocationKeys((keys) => [location.key, ...keys]);\r\n              props.onBack(locationKeys)\r\n    \r\n              // Handle back event\r\n            }\r\n          }\r\n        });\r\n      }, [locationKeys]);\r\n    \r\n\r\n   \r\n    function changeHandler(event) {\r\n        const selectValue = event.target.value;\r\n\r\n        if (selectValue === 'blood') {\r\n            setLabAnalysisType({\r\n                ...defaultState,blood:true} \r\n                );}\r\n        if (selectValue === 'thyro') {\r\n            setLabAnalysisType({\r\n                ...defaultState,thyro:true} \r\n                );}\r\n        if (selectValue === 'parathyro') {\r\n            setLabAnalysisType({\r\n                ...defaultState,parathyro:true} \r\n                );}\r\n        if (selectValue === 'ypofysi') {\r\n            setLabAnalysisType({\r\n                ...defaultState,ypofysi:true} \r\n                );}\r\n        if (selectValue === 'epinefridia') {\r\n            setLabAnalysisType({\r\n                ...defaultState,epinefridio:true} \r\n                );}\r\n        if (selectValue === 'eggs') {\r\n            setLabAnalysisType({\r\n                ...defaultState,eggs:true} \r\n                );}\r\n        if (selectValue === 'balls') {\r\n            setLabAnalysisType({\r\n                ...defaultState,balls:true} \r\n                );}\r\n    }\r\n    return (\r\n        <Container  className={classes.mylab}>\r\n            <Row>\r\n                <Col>\r\n                    <label className={classes.myselect}>Επίσκεψη</label>\r\n                    <select>\r\n                        <option>Πρώτη Επίσκεψη</option>\r\n                        <option>Δεύτερη Επίσκεψη</option>\r\n                    </select>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <label className={classes.myselect} htmlFor='labifo'>Τύπος Εξέτασης</label>\r\n                    <select onChange={changeHandler} id='labinfo'>\r\n                        <option value='blood'>Γενική Αίματος</option>\r\n                        <option value='thyro'>Θυρεοειδής</option>                        <option value='parathyro'>Παραθυρεοειδής</option>\r\n                        <option value='ypofysi'>Υπόφυση</option>\r\n                        <option value='epinefridia'>Επινεφρίδια</option>\r\n                        <option value='eggs'>Ωοθήκες</option>\r\n                        <option value='balls'>Όρχεις</option>\r\n                    </select>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {labAnalysisType.blood && <GeneralBlood />}\r\n                {labAnalysisType.thyro && <Thyro />}\r\n                {labAnalysisType.ypofysi && <Ypofysi />}\r\n                {labAnalysisType.parathyro && <Parathyro />}\r\n                {labAnalysisType.epinefridia && <Parathyro />}\r\n            </Row>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default NewLabAnalysis;","D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabAnalysis.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\ListsHeader.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsList.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\Patient-Details-Pages\\LabAnalysis\\LabsListItem.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\EditButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\SaveButton.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\DeleteModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\EditPatient.js",["215","216"],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Auth.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Input.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\authentication\\Button.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\util\\validators.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\form-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\auth-context.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\components\\UI\\ErrorModal.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\hooks\\http-hook.js",[],"D:\\Διπλωματική\\project\\frontend\\src\\context\\patient-context.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":37,"column":8,"nodeType":"223","endLine":37,"endColumn":21,"suggestions":"224"},{"ruleId":"221","severity":1,"message":"225","line":32,"column":8,"nodeType":"223","endLine":32,"endColumn":10,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":16,"column":23,"nodeType":"229","messageId":"230","endLine":16,"endColumn":28},{"ruleId":"227","severity":1,"message":"231","line":16,"column":43,"nodeType":"229","messageId":"230","endLine":16,"endColumn":53},{"ruleId":"227","severity":1,"message":"232","line":25,"column":11,"nodeType":"229","messageId":"230","endLine":25,"endColumn":30},{"ruleId":"221","severity":1,"message":"233","line":44,"column":8,"nodeType":"223","endLine":44,"endColumn":10,"suggestions":"234"},{"ruleId":"221","severity":1,"message":"233","line":29,"column":8,"nodeType":"223","endLine":29,"endColumn":10,"suggestions":"235"},{"ruleId":"221","severity":1,"message":"236","line":32,"column":8,"nodeType":"223","endLine":32,"endColumn":21,"suggestions":"237"},{"ruleId":"227","severity":1,"message":"238","line":19,"column":11,"nodeType":"229","messageId":"230","endLine":19,"endColumn":18},{"ruleId":"221","severity":1,"message":"239","line":54,"column":8,"nodeType":"223","endLine":54,"endColumn":10,"suggestions":"240"},{"ruleId":"221","severity":1,"message":"241","line":42,"column":10,"nodeType":"223","endLine":42,"endColumn":24,"suggestions":"242"},{"ruleId":"221","severity":1,"message":"243","line":36,"column":8,"nodeType":"223","endLine":36,"endColumn":21,"suggestions":"244"},{"ruleId":"227","severity":1,"message":"245","line":61,"column":15,"nodeType":"229","messageId":"230","endLine":61,"endColumn":23},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.","ArrayExpression",["248"],"React Hook useEffect has a missing dependency: 'patientId'. Either include it or remove the dependency array.",["249"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'clearError' is assigned a value but never used.","'dateOfBirthInputRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.patientId' and 'sendRequest'. Either include them or remove the dependency array.",["250"],["251"],"React Hook useEffect has a missing dependency: 'props.patientId'. Either include it or remove the dependency array.",["252"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchVisit' and 'params.visitId'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["254"],"React Hook useEffect has missing dependencies: 'auth.token' and 'props.patientId'. Either include them or remove the dependency array.",["255"],"'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"260","fix":"262"},{"desc":"260","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [auth.token, sendRequest]",{"range":"270","text":"271"},"Update the dependencies array to be: [patientId]",{"range":"272","text":"273"},"Update the dependencies array to be: [props.patientId, sendRequest]",{"range":"274","text":"275"},{"range":"276","text":"275"},{"range":"277","text":"275"},"Update the dependencies array to be: [fetchVisit, params.visitId]",{"range":"278","text":"279"},"Update the dependencies array to be: [history, locationKeys, props]",{"range":"280","text":"281"},"Update the dependencies array to be: [auth.token, props.patientId, sendRequest]",{"range":"282","text":"283"},[1640,1653],"[auth.token, sendRequest]",[1395,1397],"[patientId]",[1793,1795],"[props.patientId, sendRequest]",[1308,1310],[1182,1195],[2416,2418],"[fetchVisit, params.visitId]",[1374,1388],"[history, locationKeys, props]",[1376,1389],"[auth.token, props.patientId, sendRequest]"]